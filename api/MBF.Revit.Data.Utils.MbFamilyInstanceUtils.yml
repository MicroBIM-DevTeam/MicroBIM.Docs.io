### YamlMime:ManagedReference
items:
- uid: MBF.Revit.Data.Utils.MbFamilyInstanceUtils
  commentId: T:MBF.Revit.Data.Utils.MbFamilyInstanceUtils
  id: MbFamilyInstanceUtils
  parent: MBF.Revit.Data.Utils
  children:
  - MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementFamilyName(Autodesk.Revit.DB.ElementType)
  - MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementType(Autodesk.Revit.DB.Element)
  - MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementTypeName(Autodesk.Revit.DB.ElementType)
  - MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetFamilyNameAndType(Autodesk.Revit.DB.Element)
  langs:
  - csharp
  - vb
  name: MbFamilyInstanceUtils
  nameWithType: MbFamilyInstanceUtils
  fullName: MBF.Revit.Data.Utils.MbFamilyInstanceUtils
  type: Class
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/253b5d8129b6e5c10d98b6c3ed591eb52b009297/Utils/MbFamilyInstanceUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Provides utility methods for working with family instances in a Revit model.
  remarks: >-
    The <xref href="MBF.Revit.Data.Utils.MbFamilyInstanceUtils" data-throw-if-not-resolved="false"></xref> class offers methods to retrieve family names and types

    from Revit elements, ensuring that the elements are valid and belong to a proper document context.
  example: []
  syntax:
    content: public static class MbFamilyInstanceUtils
    content.vb: Public Module MbFamilyInstanceUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetFamilyNameAndType(Autodesk.Revit.DB.Element)
  commentId: M:MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetFamilyNameAndType(Autodesk.Revit.DB.Element)
  id: GetFamilyNameAndType(Autodesk.Revit.DB.Element)
  isExtensionMethod: true
  parent: MBF.Revit.Data.Utils.MbFamilyInstanceUtils
  langs:
  - csharp
  - vb
  name: GetFamilyNameAndType(Element)
  nameWithType: MbFamilyInstanceUtils.GetFamilyNameAndType(Element)
  fullName: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetFamilyNameAndType(Autodesk.Revit.DB.Element)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/253b5d8129b6e5c10d98b6c3ed591eb52b009297/Utils/MbFamilyInstanceUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Retrieves the family name and type of the specified element.
  remarks: >-
    This method checks the validity of the provided element and retrieves its type and

    family names.  If the element is invalid or any retrieval operation fails, the method returns a failure

    result with an appropriate error message.
  example: []
  syntax:
    content: public static MbResult<string> GetFamilyNameAndType(this Element element)
    parameters:
    - id: element
      type: Autodesk.Revit.DB.Element
      description: >-
        The element from which to retrieve the family name and type. Cannot be null and must be a valid

        object.
    return:
      type: MB.Common.Utils.Result.MbResult{System.String}
      description: >-
        A <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing a string formatted as "FamilyName-TypeName" if successful;  otherwise,

        an error message indicating the failure reason.
    content.vb: Public Shared Function GetFamilyNameAndType(element As Element) As MbResult(Of String)
  overload: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetFamilyNameAndType*
- uid: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementType(Autodesk.Revit.DB.Element)
  commentId: M:MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementType(Autodesk.Revit.DB.Element)
  id: GetElementType(Autodesk.Revit.DB.Element)
  isExtensionMethod: true
  parent: MBF.Revit.Data.Utils.MbFamilyInstanceUtils
  langs:
  - csharp
  - vb
  name: GetElementType(Element)
  nameWithType: MbFamilyInstanceUtils.GetElementType(Element)
  fullName: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementType(Autodesk.Revit.DB.Element)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/253b5d8129b6e5c10d98b6c3ed591eb52b009297/Utils/MbFamilyInstanceUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Retrieves the <xref href="ElementType" data-throw-if-not-resolved="false"></xref> of the specified <code class="paramref">element</code>.
  remarks: >-
    This method returns a failure result if the element is null, belongs to a family

    document, has no valid type, or if the retrieved type is not valid.
  example: []
  syntax:
    content: public static MbResult<ElementType> GetElementType(this Element element)
    parameters:
    - id: element
      type: Autodesk.Revit.DB.Element
      description: The element for which to retrieve the type. Must not be null and must belong to a valid document.
    return:
      type: MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.ElementType}
      description: >-
        An <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing the <xref href="ElementType" data-throw-if-not-resolved="false"></xref> if successful; otherwise, a

        failure result with an error message.
    content.vb: Public Shared Function GetElementType(element As Element) As MbResult(Of ElementType)
  overload: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementType*
- uid: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementTypeName(Autodesk.Revit.DB.ElementType)
  commentId: M:MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementTypeName(Autodesk.Revit.DB.ElementType)
  id: GetElementTypeName(Autodesk.Revit.DB.ElementType)
  isExtensionMethod: true
  parent: MBF.Revit.Data.Utils.MbFamilyInstanceUtils
  langs:
  - csharp
  - vb
  name: GetElementTypeName(ElementType)
  nameWithType: MbFamilyInstanceUtils.GetElementTypeName(ElementType)
  fullName: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementTypeName(Autodesk.Revit.DB.ElementType)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/253b5d8129b6e5c10d98b6c3ed591eb52b009297/Utils/MbFamilyInstanceUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Retrieves the name of the specified <xref href="ElementType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static MbResult<string> GetElementTypeName(this ElementType elementType)
    parameters:
    - id: elementType
      type: Autodesk.Revit.DB.ElementType
      description: >-
        The <xref href="ElementType" data-throw-if-not-resolved="false"></xref> whose name is to be retrieved. Must not be null and must be

        valid.
    return:
      type: MB.Common.Utils.Result.MbResult{System.String}
      description: >-
        An <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing the name of the <code class="paramref">elementType</code> if successful;

        otherwise, an <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> indicating failure with an appropriate error message.
    content.vb: Public Shared Function GetElementTypeName(elementType As ElementType) As MbResult(Of String)
  overload: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementTypeName*
- uid: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementFamilyName(Autodesk.Revit.DB.ElementType)
  commentId: M:MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementFamilyName(Autodesk.Revit.DB.ElementType)
  id: GetElementFamilyName(Autodesk.Revit.DB.ElementType)
  isExtensionMethod: true
  parent: MBF.Revit.Data.Utils.MbFamilyInstanceUtils
  langs:
  - csharp
  - vb
  name: GetElementFamilyName(ElementType)
  nameWithType: MbFamilyInstanceUtils.GetElementFamilyName(ElementType)
  fullName: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementFamilyName(Autodesk.Revit.DB.ElementType)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/253b5d8129b6e5c10d98b6c3ed591eb52b009297/Utils/MbFamilyInstanceUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Retrieves the family name of the specified element type.
  example: []
  syntax:
    content: public static MbResult<string> GetElementFamilyName(this ElementType elementType)
    parameters:
    - id: elementType
      type: Autodesk.Revit.DB.ElementType
      description: >-
        The element type from which to obtain the family name. Must not be null and must be a valid

        object.
    return:
      type: MB.Common.Utils.Result.MbResult{System.String}
      description: >-
        An <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing the family name of the element type if successful; otherwise, a failure

        result with an error message.
    content.vb: Public Shared Function GetElementFamilyName(elementType As ElementType) As MbResult(Of String)
  overload: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementFamilyName*
references:
- uid: MBF.Revit.Data.Utils.MbFamilyInstanceUtils
  commentId: T:MBF.Revit.Data.Utils.MbFamilyInstanceUtils
  isExternal: true
  href: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.html
  name: MbFamilyInstanceUtils
  nameWithType: MbFamilyInstanceUtils
  fullName: MBF.Revit.Data.Utils.MbFamilyInstanceUtils
- uid: MBF.Revit.Data.Utils
  commentId: N:MBF.Revit.Data.Utils
  isExternal: true
  href: MBF.html
  name: MBF.Revit.Data.Utils
  nameWithType: MBF.Revit.Data.Utils
  fullName: MBF.Revit.Data.Utils
  spec.csharp:
  - uid: MBF
    name: MBF
    isExternal: true
    href: MBF.html
  - name: .
  - uid: MBF.Revit
    name: Revit
    isExternal: true
    href: MBF.Revit.html
  - name: .
  - uid: MBF.Revit.Data
    name: Data
    isExternal: true
    href: MBF.Revit.Data.html
  - name: .
  - uid: MBF.Revit.Data.Utils
    name: Utils
    isExternal: true
    href: MBF.Revit.Data.Utils.html
  spec.vb:
  - uid: MBF
    name: MBF
    isExternal: true
    href: MBF.html
  - name: .
  - uid: MBF.Revit
    name: Revit
    isExternal: true
    href: MBF.Revit.html
  - name: .
  - uid: MBF.Revit.Data
    name: Data
    isExternal: true
    href: MBF.Revit.Data.html
  - name: .
  - uid: MBF.Revit.Data.Utils
    name: Utils
    isExternal: true
    href: MBF.Revit.Data.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MB.Common.Utils.Result.MbResult`1
  commentId: T:MB.Common.Utils.Result.MbResult`1
  parent: MB.Common.Utils.Result
  isExternal: true
  href: MB.Common.Utils.Result.MbResult-1.html
  name: MbResult<T>
  nameWithType: MbResult<T>
  fullName: MB.Common.Utils.Result.MbResult<T>
  nameWithType.vb: MbResult(Of T)
  fullName.vb: MB.Common.Utils.Result.MbResult(Of T)
  name.vb: MbResult(Of T)
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
    href: MB.Common.Utils.Result.MbResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
    href: MB.Common.Utils.Result.MbResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetFamilyNameAndType*
  commentId: Overload:MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetFamilyNameAndType
  isExternal: true
  href: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.html#MBF_Revit_Data_Utils_MbFamilyInstanceUtils_GetFamilyNameAndType_Autodesk_Revit_DB_Element_
  name: GetFamilyNameAndType
  nameWithType: MbFamilyInstanceUtils.GetFamilyNameAndType
  fullName: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetFamilyNameAndType
- uid: Autodesk.Revit.DB.Element
  isExternal: true
  name: Element
  nameWithType: Element
  fullName: Autodesk.Revit.DB.Element
- uid: MB.Common.Utils.Result.MbResult{System.String}
  commentId: T:MB.Common.Utils.Result.MbResult{System.String}
  parent: MB.Common.Utils.Result
  definition: MB.Common.Utils.Result.MbResult`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: MbResult<string>
  nameWithType: MbResult<string>
  fullName: MB.Common.Utils.Result.MbResult<string>
  nameWithType.vb: MbResult(Of String)
  fullName.vb: MB.Common.Utils.Result.MbResult(Of String)
  name.vb: MbResult(Of String)
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MB.Common.Utils.Result
  commentId: N:MB.Common.Utils.Result
  isExternal: true
  href: MB.html
  name: MB.Common.Utils.Result
  nameWithType: MB.Common.Utils.Result
  fullName: MB.Common.Utils.Result
  spec.csharp:
  - uid: MB
    name: MB
    isExternal: true
    href: MB.html
  - name: .
  - uid: MB.Common
    name: Common
    isExternal: true
    href: MB.Common.html
  - name: .
  - uid: MB.Common.Utils
    name: Utils
    isExternal: true
    href: MB.Common.Utils.html
  - name: .
  - uid: MB.Common.Utils.Result
    name: Result
    isExternal: true
    href: MB.Common.Utils.Result.html
  spec.vb:
  - uid: MB
    name: MB
    isExternal: true
    href: MB.html
  - name: .
  - uid: MB.Common
    name: Common
    isExternal: true
    href: MB.Common.html
  - name: .
  - uid: MB.Common.Utils
    name: Utils
    isExternal: true
    href: MB.Common.Utils.html
  - name: .
  - uid: MB.Common.Utils.Result
    name: Result
    isExternal: true
    href: MB.Common.Utils.Result.html
- uid: ElementType
  commentId: T:ElementType
  isExternal: true
- uid: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementType*
  commentId: Overload:MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementType
  isExternal: true
  href: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.html#MBF_Revit_Data_Utils_MbFamilyInstanceUtils_GetElementType_Autodesk_Revit_DB_Element_
  name: GetElementType
  nameWithType: MbFamilyInstanceUtils.GetElementType
  fullName: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementType
- uid: MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.ElementType}
  commentId: T:MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.ElementType}
  parent: MB.Common.Utils.Result
  definition: MB.Common.Utils.Result.MbResult`1
  name: MbResult<ElementType>
  nameWithType: MbResult<ElementType>
  fullName: MB.Common.Utils.Result.MbResult<Autodesk.Revit.DB.ElementType>
  nameWithType.vb: MbResult(Of ElementType)
  fullName.vb: MB.Common.Utils.Result.MbResult(Of Autodesk.Revit.DB.ElementType)
  name.vb: MbResult(Of ElementType)
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: <
  - uid: Autodesk.Revit.DB.ElementType
    name: ElementType
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Autodesk.Revit.DB.ElementType
    name: ElementType
    isExternal: true
  - name: )
- uid: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementTypeName*
  commentId: Overload:MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementTypeName
  isExternal: true
  href: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.html#MBF_Revit_Data_Utils_MbFamilyInstanceUtils_GetElementTypeName_Autodesk_Revit_DB_ElementType_
  name: GetElementTypeName
  nameWithType: MbFamilyInstanceUtils.GetElementTypeName
  fullName: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementTypeName
- uid: Autodesk.Revit.DB.ElementType
  isExternal: true
  name: ElementType
  nameWithType: ElementType
  fullName: Autodesk.Revit.DB.ElementType
- uid: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementFamilyName*
  commentId: Overload:MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementFamilyName
  isExternal: true
  href: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.html#MBF_Revit_Data_Utils_MbFamilyInstanceUtils_GetElementFamilyName_Autodesk_Revit_DB_ElementType_
  name: GetElementFamilyName
  nameWithType: MbFamilyInstanceUtils.GetElementFamilyName
  fullName: MBF.Revit.Data.Utils.MbFamilyInstanceUtils.GetElementFamilyName
shouldSkipMarkup: true
