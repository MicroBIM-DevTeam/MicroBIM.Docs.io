### YamlMime:ManagedReference
items:
- uid: Revit.Extensions.Extensions.DocumentExtensions
  commentId: T:Revit.Extensions.Extensions.DocumentExtensions
  id: DocumentExtensions
  parent: Revit.Extensions.Extensions
  children:
  - Revit.Extensions.Extensions.DocumentExtensions.CreateAndPlaceColumnAtPoint(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.FamilySymbol,Autodesk.Revit.DB.Level,Autodesk.Revit.DB.Level)
  - Revit.Extensions.Extensions.DocumentExtensions.GetAllRevitDocuments(Autodesk.Revit.DB.Document)
  - Revit.Extensions.Extensions.DocumentExtensions.GetFamilyTypesByCategoryOrderedByName(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.BuiltInCategory)
  - Revit.Extensions.Extensions.DocumentExtensions.GetLevelsOrderedByProperty``1(Autodesk.Revit.DB.Document,System.Func{Autodesk.Revit.DB.Level,``0},System.Boolean)
  - Revit.Extensions.Extensions.DocumentExtensions.GetLinkedDocumentsOnly(Autodesk.Revit.DB.Document)
  - Revit.Extensions.Extensions.DocumentExtensions.GetRebarBarTypes(Autodesk.Revit.DB.Document)
  - Revit.Extensions.Extensions.DocumentExtensions.GetRebarShapes(Autodesk.Revit.DB.Document)
  - Revit.Extensions.Extensions.DocumentExtensions.SearchOrCreate3DView(Autodesk.Revit.DB.Document,System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: DocumentExtensions
  nameWithType: DocumentExtensions
  fullName: Revit.Extensions.Extensions.DocumentExtensions
  type: Class
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFRevitExtensions/blob/c87d7cbad5f00fd5b0a92c6d6767254af8515122/Extensions/DocumentExtensions.cs
  assemblies:
  - Revit.Extensions
  namespace: Revit.Extensions.Extensions
  summary: Provides extension methods for the Autodesk Revit API with the result pattern for better error handling.
  example: []
  syntax:
    content: public static class DocumentExtensions
    content.vb: Public Module DocumentExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Revit.Extensions.Extensions.DocumentExtensions.GetFamilyTypesByCategoryOrderedByName(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.BuiltInCategory)
  commentId: M:Revit.Extensions.Extensions.DocumentExtensions.GetFamilyTypesByCategoryOrderedByName(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.BuiltInCategory)
  id: GetFamilyTypesByCategoryOrderedByName(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.BuiltInCategory)
  isExtensionMethod: true
  parent: Revit.Extensions.Extensions.DocumentExtensions
  langs:
  - csharp
  - vb
  name: GetFamilyTypesByCategoryOrderedByName(Document, BuiltInCategory)
  nameWithType: DocumentExtensions.GetFamilyTypesByCategoryOrderedByName(Document, BuiltInCategory)
  fullName: Revit.Extensions.Extensions.DocumentExtensions.GetFamilyTypesByCategoryOrderedByName(Autodesk.Revit.DB.Document, Autodesk.Revit.DB.BuiltInCategory)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFRevitExtensions/blob/c87d7cbad5f00fd5b0a92c6d6767254af8515122/Extensions/DocumentExtensions.cs
  assemblies:
  - Revit.Extensions
  namespace: Revit.Extensions.Extensions
  summary: Retrieves all family types of the specified category from the given Revit document as an ObservableCollection.
  example: []
  syntax:
    content: public static MbResult<ObservableCollection<FamilySymbol>> GetFamilyTypesByCategoryOrderedByName(this Document doc, BuiltInCategory category)
    parameters:
    - id: doc
      type: Autodesk.Revit.DB.Document
      description: The Revit document to search for family types.
    - id: category
      type: Autodesk.Revit.DB.BuiltInCategory
      description: The BuiltInCategory to filter family types.
    return:
      type: MB.Common.Utils.Result.MbResult{System.Collections.ObjectModel.ObservableCollection{Autodesk.Revit.DB.FamilySymbol}}
      description: >-
        An <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing:

        <ul><li>An ObservableCollection of FamilySymbol objects if successful.</li><li>An error message if the document or category is invalid.</li></ul>
    content.vb: Public Shared Function GetFamilyTypesByCategoryOrderedByName(doc As Document, category As BuiltInCategory) As MbResult(Of ObservableCollection(Of FamilySymbol))
  overload: Revit.Extensions.Extensions.DocumentExtensions.GetFamilyTypesByCategoryOrderedByName*
- uid: Revit.Extensions.Extensions.DocumentExtensions.GetLevelsOrderedByProperty``1(Autodesk.Revit.DB.Document,System.Func{Autodesk.Revit.DB.Level,``0},System.Boolean)
  commentId: M:Revit.Extensions.Extensions.DocumentExtensions.GetLevelsOrderedByProperty``1(Autodesk.Revit.DB.Document,System.Func{Autodesk.Revit.DB.Level,``0},System.Boolean)
  id: GetLevelsOrderedByProperty``1(Autodesk.Revit.DB.Document,System.Func{Autodesk.Revit.DB.Level,``0},System.Boolean)
  isExtensionMethod: true
  parent: Revit.Extensions.Extensions.DocumentExtensions
  langs:
  - csharp
  - vb
  name: GetLevelsOrderedByProperty<TKey>(Document, Func<Level, TKey>, bool)
  nameWithType: DocumentExtensions.GetLevelsOrderedByProperty<TKey>(Document, Func<Level, TKey>, bool)
  fullName: Revit.Extensions.Extensions.DocumentExtensions.GetLevelsOrderedByProperty<TKey>(Autodesk.Revit.DB.Document, System.Func<Autodesk.Revit.DB.Level, TKey>, bool)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFRevitExtensions/blob/c87d7cbad5f00fd5b0a92c6d6767254af8515122/Extensions/DocumentExtensions.cs
  assemblies:
  - Revit.Extensions
  namespace: Revit.Extensions.Extensions
  summary: Retrieves all levels from the specified Revit document as an ObservableCollection, ordered dynamically by a specified property.
  example: []
  syntax:
    content: public static MbResult<ObservableCollection<Level>> GetLevelsOrderedByProperty<TKey>(this Document doc, Func<Level, TKey> keySelector, bool ascending = true)
    parameters:
    - id: doc
      type: Autodesk.Revit.DB.Document
      description: The Revit document to search for levels.
    - id: keySelector
      type: System.Func{Autodesk.Revit.DB.Level,{TKey}}
      description: A function to extract a key from a Level for ordering.
    - id: ascending
      type: System.Boolean
      description: If true, orders levels in ascending order; otherwise, descending.
    typeParameters:
    - id: TKey
      description: The type of the property used for ordering.
    return:
      type: MB.Common.Utils.Result.MbResult{System.Collections.ObjectModel.ObservableCollection{Autodesk.Revit.DB.Level}}
      description: >-
        An <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing:

        <ul><li>An ObservableCollection of Level objects if successful.</li><li>An error message if the document or keySelector is null.</li></ul>
    content.vb: Public Shared Function GetLevelsOrderedByProperty(Of TKey)(doc As Document, keySelector As Func(Of Level, TKey), ascending As Boolean = True) As MbResult(Of ObservableCollection(Of Level))
  overload: Revit.Extensions.Extensions.DocumentExtensions.GetLevelsOrderedByProperty*
  nameWithType.vb: DocumentExtensions.GetLevelsOrderedByProperty(Of TKey)(Document, Func(Of Level, TKey), Boolean)
  fullName.vb: Revit.Extensions.Extensions.DocumentExtensions.GetLevelsOrderedByProperty(Of TKey)(Autodesk.Revit.DB.Document, System.Func(Of Autodesk.Revit.DB.Level, TKey), Boolean)
  name.vb: GetLevelsOrderedByProperty(Of TKey)(Document, Func(Of Level, TKey), Boolean)
- uid: Revit.Extensions.Extensions.DocumentExtensions.GetRebarShapes(Autodesk.Revit.DB.Document)
  commentId: M:Revit.Extensions.Extensions.DocumentExtensions.GetRebarShapes(Autodesk.Revit.DB.Document)
  id: GetRebarShapes(Autodesk.Revit.DB.Document)
  isExtensionMethod: true
  parent: Revit.Extensions.Extensions.DocumentExtensions
  langs:
  - csharp
  - vb
  name: GetRebarShapes(Document)
  nameWithType: DocumentExtensions.GetRebarShapes(Document)
  fullName: Revit.Extensions.Extensions.DocumentExtensions.GetRebarShapes(Autodesk.Revit.DB.Document)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFRevitExtensions/blob/c87d7cbad5f00fd5b0a92c6d6767254af8515122/Extensions/DocumentExtensions.cs
  assemblies:
  - Revit.Extensions
  namespace: Revit.Extensions.Extensions
  summary: Retrieves all rebar shapes from the specified Revit document.
  example: []
  syntax:
    content: public static MbResult<List<RebarShape>> GetRebarShapes(this Document doc)
    parameters:
    - id: doc
      type: Autodesk.Revit.DB.Document
      description: The Revit document to retrieve rebar shapes from.
    return:
      type: MB.Common.Utils.Result.MbResult{System.Collections.Generic.List{Autodesk.Revit.DB.Structure.RebarShape}}
      description: >-
        An <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing:

        <ul><li>A list of RebarShape objects if successful.</li><li>An error message if the document is null.</li></ul>
    content.vb: Public Shared Function GetRebarShapes(doc As Document) As MbResult(Of List(Of RebarShape))
  overload: Revit.Extensions.Extensions.DocumentExtensions.GetRebarShapes*
- uid: Revit.Extensions.Extensions.DocumentExtensions.GetRebarBarTypes(Autodesk.Revit.DB.Document)
  commentId: M:Revit.Extensions.Extensions.DocumentExtensions.GetRebarBarTypes(Autodesk.Revit.DB.Document)
  id: GetRebarBarTypes(Autodesk.Revit.DB.Document)
  isExtensionMethod: true
  parent: Revit.Extensions.Extensions.DocumentExtensions
  langs:
  - csharp
  - vb
  name: GetRebarBarTypes(Document)
  nameWithType: DocumentExtensions.GetRebarBarTypes(Document)
  fullName: Revit.Extensions.Extensions.DocumentExtensions.GetRebarBarTypes(Autodesk.Revit.DB.Document)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFRevitExtensions/blob/c87d7cbad5f00fd5b0a92c6d6767254af8515122/Extensions/DocumentExtensions.cs
  assemblies:
  - Revit.Extensions
  namespace: Revit.Extensions.Extensions
  summary: Retrieves all rebar bar types from the specified Revit document as an ObservableCollection.
  example: []
  syntax:
    content: public static MbResult<ObservableCollection<RebarBarType>> GetRebarBarTypes(this Document doc)
    parameters:
    - id: doc
      type: Autodesk.Revit.DB.Document
      description: The Revit document to retrieve rebar bar types from.
    return:
      type: MB.Common.Utils.Result.MbResult{System.Collections.ObjectModel.ObservableCollection{Autodesk.Revit.DB.Structure.RebarBarType}}
      description: >-
        An <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing:

        <ul><li>An ObservableCollection of RebarBarType objects if successful.</li><li>An error message if the document is null.</li></ul>
    content.vb: Public Shared Function GetRebarBarTypes(doc As Document) As MbResult(Of ObservableCollection(Of RebarBarType))
  overload: Revit.Extensions.Extensions.DocumentExtensions.GetRebarBarTypes*
- uid: Revit.Extensions.Extensions.DocumentExtensions.CreateAndPlaceColumnAtPoint(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.FamilySymbol,Autodesk.Revit.DB.Level,Autodesk.Revit.DB.Level)
  commentId: M:Revit.Extensions.Extensions.DocumentExtensions.CreateAndPlaceColumnAtPoint(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.FamilySymbol,Autodesk.Revit.DB.Level,Autodesk.Revit.DB.Level)
  id: CreateAndPlaceColumnAtPoint(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.FamilySymbol,Autodesk.Revit.DB.Level,Autodesk.Revit.DB.Level)
  isExtensionMethod: true
  parent: Revit.Extensions.Extensions.DocumentExtensions
  langs:
  - csharp
  - vb
  name: CreateAndPlaceColumnAtPoint(Document, XYZ, FamilySymbol, Level, Level)
  nameWithType: DocumentExtensions.CreateAndPlaceColumnAtPoint(Document, XYZ, FamilySymbol, Level, Level)
  fullName: Revit.Extensions.Extensions.DocumentExtensions.CreateAndPlaceColumnAtPoint(Autodesk.Revit.DB.Document, Autodesk.Revit.DB.XYZ, Autodesk.Revit.DB.FamilySymbol, Autodesk.Revit.DB.Level, Autodesk.Revit.DB.Level)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFRevitExtensions/blob/c87d7cbad5f00fd5b0a92c6d6767254af8515122/Extensions/DocumentExtensions.cs
  assemblies:
  - Revit.Extensions
  namespace: Revit.Extensions.Extensions
  summary: Creates and places a column at a specified point in the Revit document.
  example: []
  syntax:
    content: public static MbResult<FamilyInstance> CreateAndPlaceColumnAtPoint(this Document doc, XYZ point, FamilySymbol columnType, Level baseLevel, Level topLevel)
    parameters:
    - id: doc
      type: Autodesk.Revit.DB.Document
      description: The Revit document where the column will be placed.
    - id: point
      type: Autodesk.Revit.DB.XYZ
      description: The XYZ point where the column will be placed.
    - id: columnType
      type: Autodesk.Revit.DB.FamilySymbol
      description: The FamilySymbol representing the column type.
    - id: baseLevel
      type: Autodesk.Revit.DB.Level
      description: The base level of the column.
    - id: topLevel
      type: Autodesk.Revit.DB.Level
      description: The top level of the column.
    return:
      type: MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.FamilyInstance}
      description: >-
        An <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing:

        <ul><li>The created FamilyInstance if successful.</li><li>An error message if any input is invalid or column creation fails.</li></ul>
    content.vb: Public Shared Function CreateAndPlaceColumnAtPoint(doc As Document, point As XYZ, columnType As FamilySymbol, baseLevel As Level, topLevel As Level) As MbResult(Of FamilyInstance)
  overload: Revit.Extensions.Extensions.DocumentExtensions.CreateAndPlaceColumnAtPoint*
- uid: Revit.Extensions.Extensions.DocumentExtensions.SearchOrCreate3DView(Autodesk.Revit.DB.Document,System.String,System.Boolean)
  commentId: M:Revit.Extensions.Extensions.DocumentExtensions.SearchOrCreate3DView(Autodesk.Revit.DB.Document,System.String,System.Boolean)
  id: SearchOrCreate3DView(Autodesk.Revit.DB.Document,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Revit.Extensions.Extensions.DocumentExtensions
  langs:
  - csharp
  - vb
  name: SearchOrCreate3DView(Document, string, bool)
  nameWithType: DocumentExtensions.SearchOrCreate3DView(Document, string, bool)
  fullName: Revit.Extensions.Extensions.DocumentExtensions.SearchOrCreate3DView(Autodesk.Revit.DB.Document, string, bool)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFRevitExtensions/blob/c87d7cbad5f00fd5b0a92c6d6767254af8515122/Extensions/DocumentExtensions.cs
  assemblies:
  - Revit.Extensions
  namespace: Revit.Extensions.Extensions
  summary: Searches for a 3D view with the specified name. If it exists, returns it. Optionally, creates a new 3D view if specified.
  example: []
  syntax:
    content: public static MbResult<View3D> SearchOrCreate3DView(this Document doc, string viewName, bool createView = false)
    parameters:
    - id: doc
      type: Autodesk.Revit.DB.Document
      description: The Revit document to search or create the 3D view in.
    - id: viewName
      type: System.String
      description: The name of the 3D view to search for or create.
    - id: createView
      type: System.Boolean
      description: If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, creates a new 3D view if one does not exist.
    return:
      type: MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.View3D}
      description: >-
        An <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing:

        <ul><li>The existing or newly created <xref href="Autodesk.Revit.DB.View3D" data-throw-if-not-resolved="false"></xref> object if successful.</li><li>An error message if the document is null, the view name is invalid, or creation fails.</li></ul>
    content.vb: Public Shared Function SearchOrCreate3DView(doc As Document, viewName As String, createView As Boolean = False) As MbResult(Of View3D)
  overload: Revit.Extensions.Extensions.DocumentExtensions.SearchOrCreate3DView*
  nameWithType.vb: DocumentExtensions.SearchOrCreate3DView(Document, String, Boolean)
  fullName.vb: Revit.Extensions.Extensions.DocumentExtensions.SearchOrCreate3DView(Autodesk.Revit.DB.Document, String, Boolean)
  name.vb: SearchOrCreate3DView(Document, String, Boolean)
- uid: Revit.Extensions.Extensions.DocumentExtensions.GetAllRevitDocuments(Autodesk.Revit.DB.Document)
  commentId: M:Revit.Extensions.Extensions.DocumentExtensions.GetAllRevitDocuments(Autodesk.Revit.DB.Document)
  id: GetAllRevitDocuments(Autodesk.Revit.DB.Document)
  isExtensionMethod: true
  parent: Revit.Extensions.Extensions.DocumentExtensions
  langs:
  - csharp
  - vb
  name: GetAllRevitDocuments(Document)
  nameWithType: DocumentExtensions.GetAllRevitDocuments(Document)
  fullName: Revit.Extensions.Extensions.DocumentExtensions.GetAllRevitDocuments(Autodesk.Revit.DB.Document)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFRevitExtensions/blob/c87d7cbad5f00fd5b0a92c6d6767254af8515122/Extensions/DocumentExtensions.cs
  assemblies:
  - Revit.Extensions
  namespace: Revit.Extensions.Extensions
  summary: Retrieves the base document and all linked Revit documents.
  example: []
  syntax:
    content: public static List<Document> GetAllRevitDocuments(this Document doc)
    parameters:
    - id: doc
      type: Autodesk.Revit.DB.Document
      description: The base Revit document.
    return:
      type: System.Collections.Generic.List{Autodesk.Revit.DB.Document}
      description: A list of Revit <xref href="Autodesk.Revit.DB.Document" data-throw-if-not-resolved="false"></xref> instances including the base and all linked documents.
    content.vb: Public Shared Function GetAllRevitDocuments(doc As Document) As List(Of Document)
  overload: Revit.Extensions.Extensions.DocumentExtensions.GetAllRevitDocuments*
- uid: Revit.Extensions.Extensions.DocumentExtensions.GetLinkedDocumentsOnly(Autodesk.Revit.DB.Document)
  commentId: M:Revit.Extensions.Extensions.DocumentExtensions.GetLinkedDocumentsOnly(Autodesk.Revit.DB.Document)
  id: GetLinkedDocumentsOnly(Autodesk.Revit.DB.Document)
  isExtensionMethod: true
  parent: Revit.Extensions.Extensions.DocumentExtensions
  langs:
  - csharp
  - vb
  name: GetLinkedDocumentsOnly(Document)
  nameWithType: DocumentExtensions.GetLinkedDocumentsOnly(Document)
  fullName: Revit.Extensions.Extensions.DocumentExtensions.GetLinkedDocumentsOnly(Autodesk.Revit.DB.Document)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFRevitExtensions/blob/c87d7cbad5f00fd5b0a92c6d6767254af8515122/Extensions/DocumentExtensions.cs
  assemblies:
  - Revit.Extensions
  namespace: Revit.Extensions.Extensions
  summary: Retrieves only the linked Revit documents associated with the given base document.
  example: []
  syntax:
    content: public static List<Document> GetLinkedDocumentsOnly(this Document doc)
    parameters:
    - id: doc
      type: Autodesk.Revit.DB.Document
      description: The base Revit document.
    return:
      type: System.Collections.Generic.List{Autodesk.Revit.DB.Document}
      description: A list of linked <xref href="Autodesk.Revit.DB.Document" data-throw-if-not-resolved="false"></xref> instances.
    content.vb: Public Shared Function GetLinkedDocumentsOnly(doc As Document) As List(Of Document)
  overload: Revit.Extensions.Extensions.DocumentExtensions.GetLinkedDocumentsOnly*
references:
- uid: Revit.Extensions.Extensions
  commentId: N:Revit.Extensions.Extensions
  isExternal: true
  href: Revit.html
  name: Revit.Extensions.Extensions
  nameWithType: Revit.Extensions.Extensions
  fullName: Revit.Extensions.Extensions
  spec.csharp:
  - uid: Revit
    name: Revit
    isExternal: true
    href: Revit.html
  - name: .
  - uid: Revit.Extensions
    name: Extensions
    isExternal: true
    href: Revit.Extensions.html
  - name: .
  - uid: Revit.Extensions.Extensions
    name: Extensions
    isExternal: true
    href: Revit.Extensions.Extensions.html
  spec.vb:
  - uid: Revit
    name: Revit
    isExternal: true
    href: Revit.html
  - name: .
  - uid: Revit.Extensions
    name: Extensions
    isExternal: true
    href: Revit.Extensions.html
  - name: .
  - uid: Revit.Extensions.Extensions
    name: Extensions
    isExternal: true
    href: Revit.Extensions.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MB.Common.Utils.Result.MbResult`1
  commentId: T:MB.Common.Utils.Result.MbResult`1
  parent: MB.Common.Utils.Result
  isExternal: true
  href: MB.Common.Utils.Result.MbResult-1.html
  name: MbResult<T>
  nameWithType: MbResult<T>
  fullName: MB.Common.Utils.Result.MbResult<T>
  nameWithType.vb: MbResult(Of T)
  fullName.vb: MB.Common.Utils.Result.MbResult(Of T)
  name.vb: MbResult(Of T)
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
    href: MB.Common.Utils.Result.MbResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
    href: MB.Common.Utils.Result.MbResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Revit.Extensions.Extensions.DocumentExtensions.GetFamilyTypesByCategoryOrderedByName*
  commentId: Overload:Revit.Extensions.Extensions.DocumentExtensions.GetFamilyTypesByCategoryOrderedByName
  isExternal: true
  href: Revit.Extensions.Extensions.DocumentExtensions.html#Revit_Extensions_Extensions_DocumentExtensions_GetFamilyTypesByCategoryOrderedByName_Autodesk_Revit_DB_Document_Autodesk_Revit_DB_BuiltInCategory_
  name: GetFamilyTypesByCategoryOrderedByName
  nameWithType: DocumentExtensions.GetFamilyTypesByCategoryOrderedByName
  fullName: Revit.Extensions.Extensions.DocumentExtensions.GetFamilyTypesByCategoryOrderedByName
- uid: Autodesk.Revit.DB.Document
  commentId: T:Autodesk.Revit.DB.Document
  isExternal: true
  name: Document
  nameWithType: Document
  fullName: Autodesk.Revit.DB.Document
- uid: Autodesk.Revit.DB.BuiltInCategory
  isExternal: true
  name: BuiltInCategory
  nameWithType: BuiltInCategory
  fullName: Autodesk.Revit.DB.BuiltInCategory
- uid: MB.Common.Utils.Result.MbResult{System.Collections.ObjectModel.ObservableCollection{Autodesk.Revit.DB.FamilySymbol}}
  commentId: T:MB.Common.Utils.Result.MbResult{System.Collections.ObjectModel.ObservableCollection{Autodesk.Revit.DB.FamilySymbol}}
  parent: MB.Common.Utils.Result
  definition: MB.Common.Utils.Result.MbResult`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  name: MbResult<ObservableCollection<FamilySymbol>>
  nameWithType: MbResult<ObservableCollection<FamilySymbol>>
  fullName: MB.Common.Utils.Result.MbResult<System.Collections.ObjectModel.ObservableCollection<Autodesk.Revit.DB.FamilySymbol>>
  nameWithType.vb: MbResult(Of ObservableCollection(Of FamilySymbol))
  fullName.vb: MB.Common.Utils.Result.MbResult(Of System.Collections.ObjectModel.ObservableCollection(Of Autodesk.Revit.DB.FamilySymbol))
  name.vb: MbResult(Of ObservableCollection(Of FamilySymbol))
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: <
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: <
  - uid: Autodesk.Revit.DB.FamilySymbol
    name: FamilySymbol
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Autodesk.Revit.DB.FamilySymbol
    name: FamilySymbol
    isExternal: true
  - name: )
  - name: )
- uid: MB.Common.Utils.Result
  commentId: N:MB.Common.Utils.Result
  isExternal: true
  href: MB.html
  name: MB.Common.Utils.Result
  nameWithType: MB.Common.Utils.Result
  fullName: MB.Common.Utils.Result
  spec.csharp:
  - uid: MB
    name: MB
    isExternal: true
    href: MB.html
  - name: .
  - uid: MB.Common
    name: Common
    isExternal: true
    href: MB.Common.html
  - name: .
  - uid: MB.Common.Utils
    name: Utils
    isExternal: true
    href: MB.Common.Utils.html
  - name: .
  - uid: MB.Common.Utils.Result
    name: Result
    isExternal: true
    href: MB.Common.Utils.Result.html
  spec.vb:
  - uid: MB
    name: MB
    isExternal: true
    href: MB.html
  - name: .
  - uid: MB.Common
    name: Common
    isExternal: true
    href: MB.Common.html
  - name: .
  - uid: MB.Common.Utils
    name: Utils
    isExternal: true
    href: MB.Common.Utils.html
  - name: .
  - uid: MB.Common.Utils.Result
    name: Result
    isExternal: true
    href: MB.Common.Utils.Result.html
- uid: Revit.Extensions.Extensions.DocumentExtensions.GetLevelsOrderedByProperty*
  commentId: Overload:Revit.Extensions.Extensions.DocumentExtensions.GetLevelsOrderedByProperty
  isExternal: true
  href: Revit.Extensions.Extensions.DocumentExtensions.html#Revit_Extensions_Extensions_DocumentExtensions_GetLevelsOrderedByProperty__1_Autodesk_Revit_DB_Document_System_Func_Autodesk_Revit_DB_Level___0__System_Boolean_
  name: GetLevelsOrderedByProperty
  nameWithType: DocumentExtensions.GetLevelsOrderedByProperty
  fullName: Revit.Extensions.Extensions.DocumentExtensions.GetLevelsOrderedByProperty
- uid: System.Func{Autodesk.Revit.DB.Level,{TKey}}
  commentId: T:System.Func{Autodesk.Revit.DB.Level,``0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Level, TKey>
  nameWithType: Func<Level, TKey>
  fullName: System.Func<Autodesk.Revit.DB.Level, TKey>
  nameWithType.vb: Func(Of Level, TKey)
  fullName.vb: System.Func(Of Autodesk.Revit.DB.Level, TKey)
  name.vb: Func(Of Level, TKey)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Autodesk.Revit.DB.Level
    name: Level
    isExternal: true
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Autodesk.Revit.DB.Level
    name: Level
    isExternal: true
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MB.Common.Utils.Result.MbResult{System.Collections.ObjectModel.ObservableCollection{Autodesk.Revit.DB.Level}}
  commentId: T:MB.Common.Utils.Result.MbResult{System.Collections.ObjectModel.ObservableCollection{Autodesk.Revit.DB.Level}}
  parent: MB.Common.Utils.Result
  definition: MB.Common.Utils.Result.MbResult`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  name: MbResult<ObservableCollection<Level>>
  nameWithType: MbResult<ObservableCollection<Level>>
  fullName: MB.Common.Utils.Result.MbResult<System.Collections.ObjectModel.ObservableCollection<Autodesk.Revit.DB.Level>>
  nameWithType.vb: MbResult(Of ObservableCollection(Of Level))
  fullName.vb: MB.Common.Utils.Result.MbResult(Of System.Collections.ObjectModel.ObservableCollection(Of Autodesk.Revit.DB.Level))
  name.vb: MbResult(Of ObservableCollection(Of Level))
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: <
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: <
  - uid: Autodesk.Revit.DB.Level
    name: Level
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Autodesk.Revit.DB.Level
    name: Level
    isExternal: true
  - name: )
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Revit.Extensions.Extensions.DocumentExtensions.GetRebarShapes*
  commentId: Overload:Revit.Extensions.Extensions.DocumentExtensions.GetRebarShapes
  isExternal: true
  href: Revit.Extensions.Extensions.DocumentExtensions.html#Revit_Extensions_Extensions_DocumentExtensions_GetRebarShapes_Autodesk_Revit_DB_Document_
  name: GetRebarShapes
  nameWithType: DocumentExtensions.GetRebarShapes
  fullName: Revit.Extensions.Extensions.DocumentExtensions.GetRebarShapes
- uid: MB.Common.Utils.Result.MbResult{System.Collections.Generic.List{Autodesk.Revit.DB.Structure.RebarShape}}
  commentId: T:MB.Common.Utils.Result.MbResult{System.Collections.Generic.List{Autodesk.Revit.DB.Structure.RebarShape}}
  parent: MB.Common.Utils.Result
  definition: MB.Common.Utils.Result.MbResult`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: MbResult<List<RebarShape>>
  nameWithType: MbResult<List<RebarShape>>
  fullName: MB.Common.Utils.Result.MbResult<System.Collections.Generic.List<Autodesk.Revit.DB.Structure.RebarShape>>
  nameWithType.vb: MbResult(Of List(Of RebarShape))
  fullName.vb: MB.Common.Utils.Result.MbResult(Of System.Collections.Generic.List(Of Autodesk.Revit.DB.Structure.RebarShape))
  name.vb: MbResult(Of List(Of RebarShape))
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Autodesk.Revit.DB.Structure.RebarShape
    name: RebarShape
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Autodesk.Revit.DB.Structure.RebarShape
    name: RebarShape
    isExternal: true
  - name: )
  - name: )
- uid: Revit.Extensions.Extensions.DocumentExtensions.GetRebarBarTypes*
  commentId: Overload:Revit.Extensions.Extensions.DocumentExtensions.GetRebarBarTypes
  isExternal: true
  href: Revit.Extensions.Extensions.DocumentExtensions.html#Revit_Extensions_Extensions_DocumentExtensions_GetRebarBarTypes_Autodesk_Revit_DB_Document_
  name: GetRebarBarTypes
  nameWithType: DocumentExtensions.GetRebarBarTypes
  fullName: Revit.Extensions.Extensions.DocumentExtensions.GetRebarBarTypes
- uid: MB.Common.Utils.Result.MbResult{System.Collections.ObjectModel.ObservableCollection{Autodesk.Revit.DB.Structure.RebarBarType}}
  commentId: T:MB.Common.Utils.Result.MbResult{System.Collections.ObjectModel.ObservableCollection{Autodesk.Revit.DB.Structure.RebarBarType}}
  parent: MB.Common.Utils.Result
  definition: MB.Common.Utils.Result.MbResult`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  name: MbResult<ObservableCollection<RebarBarType>>
  nameWithType: MbResult<ObservableCollection<RebarBarType>>
  fullName: MB.Common.Utils.Result.MbResult<System.Collections.ObjectModel.ObservableCollection<Autodesk.Revit.DB.Structure.RebarBarType>>
  nameWithType.vb: MbResult(Of ObservableCollection(Of RebarBarType))
  fullName.vb: MB.Common.Utils.Result.MbResult(Of System.Collections.ObjectModel.ObservableCollection(Of Autodesk.Revit.DB.Structure.RebarBarType))
  name.vb: MbResult(Of ObservableCollection(Of RebarBarType))
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: <
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: <
  - uid: Autodesk.Revit.DB.Structure.RebarBarType
    name: RebarBarType
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.observablecollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Autodesk.Revit.DB.Structure.RebarBarType
    name: RebarBarType
    isExternal: true
  - name: )
  - name: )
- uid: Revit.Extensions.Extensions.DocumentExtensions.CreateAndPlaceColumnAtPoint*
  commentId: Overload:Revit.Extensions.Extensions.DocumentExtensions.CreateAndPlaceColumnAtPoint
  isExternal: true
  href: Revit.Extensions.Extensions.DocumentExtensions.html#Revit_Extensions_Extensions_DocumentExtensions_CreateAndPlaceColumnAtPoint_Autodesk_Revit_DB_Document_Autodesk_Revit_DB_XYZ_Autodesk_Revit_DB_FamilySymbol_Autodesk_Revit_DB_Level_Autodesk_Revit_DB_Level_
  name: CreateAndPlaceColumnAtPoint
  nameWithType: DocumentExtensions.CreateAndPlaceColumnAtPoint
  fullName: Revit.Extensions.Extensions.DocumentExtensions.CreateAndPlaceColumnAtPoint
- uid: Autodesk.Revit.DB.XYZ
  commentId: T:Autodesk.Revit.DB.XYZ
  isExternal: true
  name: XYZ
  nameWithType: XYZ
  fullName: Autodesk.Revit.DB.XYZ
- uid: Autodesk.Revit.DB.FamilySymbol
  commentId: '!:Autodesk.Revit.DB.FamilySymbol'
  isExternal: true
  name: FamilySymbol
  nameWithType: FamilySymbol
  fullName: Autodesk.Revit.DB.FamilySymbol
- uid: Autodesk.Revit.DB.Level
  isExternal: true
  name: Level
  nameWithType: Level
  fullName: Autodesk.Revit.DB.Level
- uid: MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.FamilyInstance}
  commentId: T:MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.FamilyInstance}
  parent: MB.Common.Utils.Result
  definition: MB.Common.Utils.Result.MbResult`1
  name: MbResult<FamilyInstance>
  nameWithType: MbResult<FamilyInstance>
  fullName: MB.Common.Utils.Result.MbResult<Autodesk.Revit.DB.FamilyInstance>
  nameWithType.vb: MbResult(Of FamilyInstance)
  fullName.vb: MB.Common.Utils.Result.MbResult(Of Autodesk.Revit.DB.FamilyInstance)
  name.vb: MbResult(Of FamilyInstance)
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: <
  - uid: Autodesk.Revit.DB.FamilyInstance
    name: FamilyInstance
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Autodesk.Revit.DB.FamilyInstance
    name: FamilyInstance
    isExternal: true
  - name: )
- uid: Autodesk.Revit.DB.View3D
  commentId: T:Autodesk.Revit.DB.View3D
  isExternal: true
- uid: Revit.Extensions.Extensions.DocumentExtensions.SearchOrCreate3DView*
  commentId: Overload:Revit.Extensions.Extensions.DocumentExtensions.SearchOrCreate3DView
  isExternal: true
  href: Revit.Extensions.Extensions.DocumentExtensions.html#Revit_Extensions_Extensions_DocumentExtensions_SearchOrCreate3DView_Autodesk_Revit_DB_Document_System_String_System_Boolean_
  name: SearchOrCreate3DView
  nameWithType: DocumentExtensions.SearchOrCreate3DView
  fullName: Revit.Extensions.Extensions.DocumentExtensions.SearchOrCreate3DView
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.View3D}
  commentId: T:MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.View3D}
  parent: MB.Common.Utils.Result
  definition: MB.Common.Utils.Result.MbResult`1
  name: MbResult<View3D>
  nameWithType: MbResult<View3D>
  fullName: MB.Common.Utils.Result.MbResult<Autodesk.Revit.DB.View3D>
  nameWithType.vb: MbResult(Of View3D)
  fullName.vb: MB.Common.Utils.Result.MbResult(Of Autodesk.Revit.DB.View3D)
  name.vb: MbResult(Of View3D)
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: <
  - uid: Autodesk.Revit.DB.View3D
    name: View3D
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Autodesk.Revit.DB.View3D
    name: View3D
    isExternal: true
  - name: )
- uid: Revit.Extensions.Extensions.DocumentExtensions.GetAllRevitDocuments*
  commentId: Overload:Revit.Extensions.Extensions.DocumentExtensions.GetAllRevitDocuments
  isExternal: true
  href: Revit.Extensions.Extensions.DocumentExtensions.html#Revit_Extensions_Extensions_DocumentExtensions_GetAllRevitDocuments_Autodesk_Revit_DB_Document_
  name: GetAllRevitDocuments
  nameWithType: DocumentExtensions.GetAllRevitDocuments
  fullName: Revit.Extensions.Extensions.DocumentExtensions.GetAllRevitDocuments
- uid: System.Collections.Generic.List{Autodesk.Revit.DB.Document}
  commentId: T:System.Collections.Generic.List{Autodesk.Revit.DB.Document}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Document>
  nameWithType: List<Document>
  fullName: System.Collections.Generic.List<Autodesk.Revit.DB.Document>
  nameWithType.vb: List(Of Document)
  fullName.vb: System.Collections.Generic.List(Of Autodesk.Revit.DB.Document)
  name.vb: List(Of Document)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Autodesk.Revit.DB.Document
    name: Document
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Autodesk.Revit.DB.Document
    name: Document
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Revit.Extensions.Extensions.DocumentExtensions.GetLinkedDocumentsOnly*
  commentId: Overload:Revit.Extensions.Extensions.DocumentExtensions.GetLinkedDocumentsOnly
  isExternal: true
  href: Revit.Extensions.Extensions.DocumentExtensions.html#Revit_Extensions_Extensions_DocumentExtensions_GetLinkedDocumentsOnly_Autodesk_Revit_DB_Document_
  name: GetLinkedDocumentsOnly
  nameWithType: DocumentExtensions.GetLinkedDocumentsOnly
  fullName: Revit.Extensions.Extensions.DocumentExtensions.GetLinkedDocumentsOnly
shouldSkipMarkup: true
