### YamlMime:ManagedReference
items:
- uid: MB.Common.Units.Converters.RevitLengthValueConverter
  commentId: T:MB.Common.Units.Converters.RevitLengthValueConverter
  id: RevitLengthValueConverter
  parent: MB.Common.Units.Converters
  children:
  - MB.Common.Units.Converters.RevitLengthValueConverter.#ctor
  - MB.Common.Units.Converters.RevitLengthValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - MB.Common.Units.Converters.RevitLengthValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - MB.Common.Units.Converters.RevitLengthValueConverter.TryParseValueWithUnits(System.String,Autodesk.Revit.DB.ForgeTypeId,System.Double@)
  langs:
  - csharp
  - vb
  name: RevitLengthValueConverter
  nameWithType: RevitLengthValueConverter
  fullName: MB.Common.Units.Converters.RevitLengthValueConverter
  type: Class
  source:
    href: https://github.com/MicroBIM-DevTeam/MB.Common/blob/03427dd60ca1ecd255dc2b7bcbc47cd343703f2f/Units/Converters/RevitLengthValueConverter.cs
  assemblies:
  - MB.Common
  namespace: MB.Common.Units.Converters
  summary: >-
    Provides methods to convert length values between internal units and formatted strings suitable for display in a

    Revit application.
  remarks: >-
    This converter is designed to work with Revit's unit system, allowing for the conversion of length
                values to and from their string representations based on the active document's unit settings. It supports both
                forward and backward conversion, handling various input types such as <xref href="System.Double" data-throw-if-not-resolved="false"></xref> and <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class RevitLengthValueConverter : IValueConverter'
    content.vb: Public Class RevitLengthValueConverter Implements IValueConverter
  inheritance:
  - System.Object
  implements:
  - System.Windows.Data.IValueConverter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MB.Common.Units.Converters.RevitLengthValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:MB.Common.Units.Converters.RevitLengthValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: MB.Common.Units.Converters.RevitLengthValueConverter
  langs:
  - csharp
  - vb
  name: Convert(object, Type, object, CultureInfo)
  nameWithType: RevitLengthValueConverter.Convert(object, Type, object, CultureInfo)
  fullName: MB.Common.Units.Converters.RevitLengthValueConverter.Convert(object, System.Type, object, System.Globalization.CultureInfo)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MB.Common/blob/03427dd60ca1ecd255dc2b7bcbc47cd343703f2f/Units/Converters/RevitLengthValueConverter.cs
  assemblies:
  - MB.Common
  namespace: MB.Common.Units.Converters
  summary: Converts a given value to a formatted string representation based on the specified target type and culture.
  remarks: >-
    The method formats numeric values according to the active document's unit settings and
                appends unit symbols. If the input value is a string, it attempts to parse it as a numeric value before
                formatting.
  example: []
  syntax:
    content: public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    parameters:
    - id: value
      type: System.Object
      description: The value to convert, which can be a double or a string representing a numeric value.
    - id: targetType
      type: System.Type
      description: The type to which the value is being converted. This parameter is not used in the conversion process.
    - id: parameter
      type: System.Object
      description: An optional parameter for the conversion. This parameter is not used in the conversion process.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture information to use during conversion, affecting number formatting.
    return:
      type: System.Object
      description: >-
        A string representing the formatted value with unit symbols appended, or the original value if it cannot be
                    converted.
    content.vb: Public Function Convert(value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object
  overload: MB.Common.Units.Converters.RevitLengthValueConverter.Convert*
  implements:
  - System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  nameWithType.vb: RevitLengthValueConverter.Convert(Object, Type, Object, CultureInfo)
  fullName.vb: MB.Common.Units.Converters.RevitLengthValueConverter.Convert(Object, System.Type, Object, System.Globalization.CultureInfo)
  name.vb: Convert(Object, Type, Object, CultureInfo)
- uid: MB.Common.Units.Converters.RevitLengthValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:MB.Common.Units.Converters.RevitLengthValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: MB.Common.Units.Converters.RevitLengthValueConverter
  langs:
  - csharp
  - vb
  name: ConvertBack(object, Type, object, CultureInfo)
  nameWithType: RevitLengthValueConverter.ConvertBack(object, Type, object, CultureInfo)
  fullName: MB.Common.Units.Converters.RevitLengthValueConverter.ConvertBack(object, System.Type, object, System.Globalization.CultureInfo)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MB.Common/blob/03427dd60ca1ecd255dc2b7bcbc47cd343703f2f/Units/Converters/RevitLengthValueConverter.cs
  assemblies:
  - MB.Common
  namespace: MB.Common.Units.Converters
  summary: >-
    Converts a value back to its original type, interpreting strings with units or converting double values from

    internal units.
  remarks: >-
    This method supports conversion of string inputs that include units and double values
                representing lengths in internal units. If the input is a string, it attempts to parse it as a value with units.
                If the input is a double, it converts it from internal units using the current document's unit settings. If the
                conversion cannot be performed, <xref href="System.Windows.Data.Binding.DoNothing" data-throw-if-not-resolved="false"></xref> is returned.
  example: []
  syntax:
    content: public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    parameters:
    - id: value
      type: System.Object
      description: >-
        The value to convert back. This can be a string representing a value with units or a double representing a
                    length in internal units.
    - id: targetType
      type: System.Type
      description: The type to which the value is being converted. This parameter is not used in the conversion process.
    - id: parameter
      type: System.Object
      description: An optional parameter for the conversion. This parameter is not used in the conversion process.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture to use in the conversion process. This parameter is not used in the conversion process.
    return:
      type: System.Object
      description: >-
        The converted value as a double if the input is a valid string with units or a double in internal units;
                    otherwise, returns <xref href="System.Windows.Data.Binding.DoNothing" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ConvertBack(value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object
  overload: MB.Common.Units.Converters.RevitLengthValueConverter.ConvertBack*
  implements:
  - System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  nameWithType.vb: RevitLengthValueConverter.ConvertBack(Object, Type, Object, CultureInfo)
  fullName.vb: MB.Common.Units.Converters.RevitLengthValueConverter.ConvertBack(Object, System.Type, Object, System.Globalization.CultureInfo)
  name.vb: ConvertBack(Object, Type, Object, CultureInfo)
- uid: MB.Common.Units.Converters.RevitLengthValueConverter.TryParseValueWithUnits(System.String,Autodesk.Revit.DB.ForgeTypeId,System.Double@)
  commentId: M:MB.Common.Units.Converters.RevitLengthValueConverter.TryParseValueWithUnits(System.String,Autodesk.Revit.DB.ForgeTypeId,System.Double@)
  id: TryParseValueWithUnits(System.String,Autodesk.Revit.DB.ForgeTypeId,System.Double@)
  parent: MB.Common.Units.Converters.RevitLengthValueConverter
  langs:
  - csharp
  - vb
  name: TryParseValueWithUnits(string, ForgeTypeId, out double)
  nameWithType: RevitLengthValueConverter.TryParseValueWithUnits(string, ForgeTypeId, out double)
  fullName: MB.Common.Units.Converters.RevitLengthValueConverter.TryParseValueWithUnits(string, Autodesk.Revit.DB.ForgeTypeId, out double)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MB.Common/blob/03427dd60ca1ecd255dc2b7bcbc47cd343703f2f/Units/Converters/RevitLengthValueConverter.cs
  assemblies:
  - MB.Common
  namespace: MB.Common.Units.Converters
  summary: Attempts to parse a string input representing a value with units into a double, based on the specified unit type.
  remarks: >-
    This method uses the active document's units to interpret the input string. If the active
                document or its units are unavailable, the method returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public static bool TryParseValueWithUnits(string input, ForgeTypeId specTypeId, out double internalValue)
    parameters:
    - id: input
      type: System.String
      description: >-
        The input string containing the value and units to parse. This string is case-insensitive and will be trimmed of
                    whitespace.
    - id: specTypeId
      type: Autodesk.Revit.DB.ForgeTypeId
      description: The unit type identifier used to interpret the units in the input string.
    - id: internalValue
      type: System.Double
      description: When this method returns, contains the parsed double value if the conversion succeeded, or zero if it failed.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the input string was successfully parsed into a double value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Function TryParseValueWithUnits(input As String, specTypeId As ForgeTypeId, internalValue As Double) As Boolean
  overload: MB.Common.Units.Converters.RevitLengthValueConverter.TryParseValueWithUnits*
  nameWithType.vb: RevitLengthValueConverter.TryParseValueWithUnits(String, ForgeTypeId, Double)
  fullName.vb: MB.Common.Units.Converters.RevitLengthValueConverter.TryParseValueWithUnits(String, Autodesk.Revit.DB.ForgeTypeId, Double)
  name.vb: TryParseValueWithUnits(String, ForgeTypeId, Double)
- uid: MB.Common.Units.Converters.RevitLengthValueConverter.#ctor
  commentId: M:MB.Common.Units.Converters.RevitLengthValueConverter.#ctor
  id: '#ctor'
  parent: MB.Common.Units.Converters.RevitLengthValueConverter
  langs:
  - csharp
  - vb
  name: RevitLengthValueConverter()
  nameWithType: RevitLengthValueConverter.RevitLengthValueConverter()
  fullName: MB.Common.Units.Converters.RevitLengthValueConverter.RevitLengthValueConverter()
  type: Constructor
  source:
    href: https://github.com/MicroBIM-DevTeam/MB.Common/blob/03427dd60ca1ecd255dc2b7bcbc47cd343703f2f/Units/Converters/RevitLengthValueConverter.cs
  assemblies:
  - MB.Common
  namespace: MB.Common.Units.Converters
  syntax:
    content: public RevitLengthValueConverter()
    content.vb: Public Sub New()
  overload: MB.Common.Units.Converters.RevitLengthValueConverter.#ctor*
  nameWithType.vb: RevitLengthValueConverter.New()
  fullName.vb: MB.Common.Units.Converters.RevitLengthValueConverter.New()
  name.vb: New()
references:
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MB.Common.Units.Converters
  commentId: N:MB.Common.Units.Converters
  isExternal: true
  href: MB.html
  name: MB.Common.Units.Converters
  nameWithType: MB.Common.Units.Converters
  fullName: MB.Common.Units.Converters
  spec.csharp:
  - uid: MB
    name: MB
    isExternal: true
    href: MB.html
  - name: .
  - uid: MB.Common
    name: Common
    isExternal: true
    href: MB.Common.html
  - name: .
  - uid: MB.Common.Units
    name: Units
    isExternal: true
    href: MB.Common.Units.html
  - name: .
  - uid: MB.Common.Units.Converters
    name: Converters
    isExternal: true
    href: MB.Common.Units.Converters.html
  spec.vb:
  - uid: MB
    name: MB
    isExternal: true
    href: MB.html
  - name: .
  - uid: MB.Common
    name: Common
    isExternal: true
    href: MB.Common.html
  - name: .
  - uid: MB.Common.Units
    name: Units
    isExternal: true
    href: MB.Common.Units.html
  - name: .
  - uid: MB.Common.Units.Converters
    name: Converters
    isExternal: true
    href: MB.Common.Units.Converters.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Windows.Data.IValueConverter
  commentId: T:System.Windows.Data.IValueConverter
  parent: System.Windows.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.data.ivalueconverter
  name: IValueConverter
  nameWithType: IValueConverter
  fullName: System.Windows.Data.IValueConverter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.data
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Windows
    name: Windows
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows
  - name: .
  - uid: System.Windows.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.data
- uid: MB.Common.Units.Converters.RevitLengthValueConverter.Convert*
  commentId: Overload:MB.Common.Units.Converters.RevitLengthValueConverter.Convert
  isExternal: true
  href: MB.Common.Units.Converters.RevitLengthValueConverter.html#MB_Common_Units_Converters_RevitLengthValueConverter_Convert_System_Object_System_Type_System_Object_System_Globalization_CultureInfo_
  name: Convert
  nameWithType: RevitLengthValueConverter.Convert
  fullName: MB.Common.Units.Converters.RevitLengthValueConverter.Convert
- uid: System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IValueConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.data.ivalueconverter.convert
  name: Convert(object, Type, object, CultureInfo)
  nameWithType: IValueConverter.Convert(object, Type, object, CultureInfo)
  fullName: System.Windows.Data.IValueConverter.Convert(object, System.Type, object, System.Globalization.CultureInfo)
  nameWithType.vb: IValueConverter.Convert(Object, Type, Object, CultureInfo)
  fullName.vb: System.Windows.Data.IValueConverter.Convert(Object, System.Type, Object, System.Globalization.CultureInfo)
  name.vb: Convert(Object, Type, Object, CultureInfo)
  spec.csharp:
  - uid: System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.data.ivalueconverter.convert
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
  spec.vb:
  - uid: System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.data.ivalueconverter.convert
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: System.Windows.Data.Binding.DoNothing
  commentId: F:System.Windows.Data.Binding.DoNothing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.data.binding.donothing
  name: DoNothing
  nameWithType: Binding.DoNothing
  fullName: System.Windows.Data.Binding.DoNothing
- uid: MB.Common.Units.Converters.RevitLengthValueConverter.ConvertBack*
  commentId: Overload:MB.Common.Units.Converters.RevitLengthValueConverter.ConvertBack
  isExternal: true
  href: MB.Common.Units.Converters.RevitLengthValueConverter.html#MB_Common_Units_Converters_RevitLengthValueConverter_ConvertBack_System_Object_System_Type_System_Object_System_Globalization_CultureInfo_
  name: ConvertBack
  nameWithType: RevitLengthValueConverter.ConvertBack
  fullName: MB.Common.Units.Converters.RevitLengthValueConverter.ConvertBack
- uid: System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IValueConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.windows.data.ivalueconverter.convertback
  name: ConvertBack(object, Type, object, CultureInfo)
  nameWithType: IValueConverter.ConvertBack(object, Type, object, CultureInfo)
  fullName: System.Windows.Data.IValueConverter.ConvertBack(object, System.Type, object, System.Globalization.CultureInfo)
  nameWithType.vb: IValueConverter.ConvertBack(Object, Type, Object, CultureInfo)
  fullName.vb: System.Windows.Data.IValueConverter.ConvertBack(Object, System.Type, Object, System.Globalization.CultureInfo)
  name.vb: ConvertBack(Object, Type, Object, CultureInfo)
  spec.csharp:
  - uid: System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.data.ivalueconverter.convertback
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
  spec.vb:
  - uid: System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.windows.data.ivalueconverter.convertback
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
- uid: MB.Common.Units.Converters.RevitLengthValueConverter.TryParseValueWithUnits*
  commentId: Overload:MB.Common.Units.Converters.RevitLengthValueConverter.TryParseValueWithUnits
  isExternal: true
  href: MB.Common.Units.Converters.RevitLengthValueConverter.html#MB_Common_Units_Converters_RevitLengthValueConverter_TryParseValueWithUnits_System_String_Autodesk_Revit_DB_ForgeTypeId_System_Double__
  name: TryParseValueWithUnits
  nameWithType: RevitLengthValueConverter.TryParseValueWithUnits
  fullName: MB.Common.Units.Converters.RevitLengthValueConverter.TryParseValueWithUnits
- uid: Autodesk.Revit.DB.ForgeTypeId
  commentId: '!:Autodesk.Revit.DB.ForgeTypeId'
  isExternal: true
  name: ForgeTypeId
  nameWithType: ForgeTypeId
  fullName: Autodesk.Revit.DB.ForgeTypeId
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MB.Common.Units.Converters.RevitLengthValueConverter.#ctor*
  commentId: Overload:MB.Common.Units.Converters.RevitLengthValueConverter.#ctor
  isExternal: true
  href: MB.Common.Units.Converters.RevitLengthValueConverter.html#MB_Common_Units_Converters_RevitLengthValueConverter__ctor
  name: RevitLengthValueConverter
  nameWithType: RevitLengthValueConverter.RevitLengthValueConverter
  fullName: MB.Common.Units.Converters.RevitLengthValueConverter.RevitLengthValueConverter
  nameWithType.vb: RevitLengthValueConverter.New
  fullName.vb: MB.Common.Units.Converters.RevitLengthValueConverter.New
  name.vb: New
shouldSkipMarkup: true
