### YamlMime:ManagedReference
items:
- uid: MBFWpfToolkit.Helpers.WindowController
  commentId: T:MBFWpfToolkit.Helpers.WindowController
  id: WindowController
  parent: MBFWpfToolkit.Helpers
  children:
  - MBFWpfToolkit.Helpers.WindowController.Close``1
  - MBFWpfToolkit.Helpers.WindowController.Focus``1
  - MBFWpfToolkit.Helpers.WindowController.Hide``1
  - MBFWpfToolkit.Helpers.WindowController.Show(MicroBIM.UI.Controls.Window)
  - MBFWpfToolkit.Helpers.WindowController.Show(MicroBIM.UI.Controls.Window,System.IntPtr)
  - MBFWpfToolkit.Helpers.WindowController.ShowDialog(MicroBIM.UI.Controls.Window)
  - MBFWpfToolkit.Helpers.WindowController.ShowDialog(MicroBIM.UI.Controls.Window,System.IntPtr)
  - MBFWpfToolkit.Helpers.WindowController.Show``1
  langs:
  - csharp
  - vb
  name: WindowController
  nameWithType: WindowController
  fullName: MBFWpfToolkit.Helpers.WindowController
  type: Class
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFWpfToolkit/blob/17914ba6724206c6757c3a2fff319217e9162479/Helpers/WindowController.cs
  assemblies:
  - MBFWpfToolkit
  namespace: MBFWpfToolkit.Helpers
  summary: >-
    Manages the lifecycle of modeless WPF windows to prevent duplicates,

    maintain a global reference list, and enable programmatic control.
  example: []
  syntax:
    content: public static class WindowController
    content.vb: Public Module WindowController
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MBFWpfToolkit.Helpers.WindowController.Focus``1
  commentId: M:MBFWpfToolkit.Helpers.WindowController.Focus``1
  id: Focus``1
  parent: MBFWpfToolkit.Helpers.WindowController
  langs:
  - csharp
  - vb
  name: Focus<T>()
  nameWithType: WindowController.Focus<T>()
  fullName: MBFWpfToolkit.Helpers.WindowController.Focus<T>()
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFWpfToolkit/blob/17914ba6724206c6757c3a2fff319217e9162479/Helpers/WindowController.cs
  assemblies:
  - MBFWpfToolkit
  namespace: MBFWpfToolkit.Helpers
  summary: >-
    Attempts to focus an existing window of type <code class="typeparamref">T</code>.

    If minimized or hidden, restores and shows it.
  example: []
  syntax:
    content: 'public static bool Focus<T>() where T : Window'
    typeParameters:
    - id: T
      description: The type of the window to focus.
    return:
      type: System.Boolean
      description: True if an existing window was found and focused; otherwise false.
    content.vb: Public Shared Function Focus(Of T As Window)() As Boolean
  overload: MBFWpfToolkit.Helpers.WindowController.Focus*
  nameWithType.vb: WindowController.Focus(Of T)()
  fullName.vb: MBFWpfToolkit.Helpers.WindowController.Focus(Of T)()
  name.vb: Focus(Of T)()
- uid: MBFWpfToolkit.Helpers.WindowController.Show(MicroBIM.UI.Controls.Window)
  commentId: M:MBFWpfToolkit.Helpers.WindowController.Show(MicroBIM.UI.Controls.Window)
  id: Show(MicroBIM.UI.Controls.Window)
  parent: MBFWpfToolkit.Helpers.WindowController
  langs:
  - csharp
  - vb
  name: Show(Window)
  nameWithType: WindowController.Show(Window)
  fullName: MBFWpfToolkit.Helpers.WindowController.Show(MicroBIM.UI.Controls.Window)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFWpfToolkit/blob/17914ba6724206c6757c3a2fff319217e9162479/Helpers/WindowController.cs
  assemblies:
  - MBFWpfToolkit
  namespace: MBFWpfToolkit.Helpers
  summary: Shows a modeless window and registers it in the controller.
  example: []
  syntax:
    content: public static void Show(Window window)
    parameters:
    - id: window
      type: MicroBIM.UI.Controls.Window
      description: The window to show.
    content.vb: Public Shared Sub Show(window As Window)
  overload: MBFWpfToolkit.Helpers.WindowController.Show*
- uid: MBFWpfToolkit.Helpers.WindowController.Show(MicroBIM.UI.Controls.Window,System.IntPtr)
  commentId: M:MBFWpfToolkit.Helpers.WindowController.Show(MicroBIM.UI.Controls.Window,System.IntPtr)
  id: Show(MicroBIM.UI.Controls.Window,System.IntPtr)
  parent: MBFWpfToolkit.Helpers.WindowController
  langs:
  - csharp
  - vb
  name: Show(Window, IntPtr)
  nameWithType: WindowController.Show(Window, IntPtr)
  fullName: MBFWpfToolkit.Helpers.WindowController.Show(MicroBIM.UI.Controls.Window, System.IntPtr)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFWpfToolkit/blob/17914ba6724206c6757c3a2fff319217e9162479/Helpers/WindowController.cs
  assemblies:
  - MBFWpfToolkit
  namespace: MBFWpfToolkit.Helpers
  summary: Shows a modeless window with a native owner handle.
  example: []
  syntax:
    content: public static void Show(Window window, IntPtr handle)
    parameters:
    - id: window
      type: MicroBIM.UI.Controls.Window
      description: The window to show.
    - id: handle
      type: System.IntPtr
      description: The native owner window handle (HWND).
    content.vb: Public Shared Sub Show(window As Window, handle As IntPtr)
  overload: MBFWpfToolkit.Helpers.WindowController.Show*
- uid: MBFWpfToolkit.Helpers.WindowController.ShowDialog(MicroBIM.UI.Controls.Window)
  commentId: M:MBFWpfToolkit.Helpers.WindowController.ShowDialog(MicroBIM.UI.Controls.Window)
  id: ShowDialog(MicroBIM.UI.Controls.Window)
  parent: MBFWpfToolkit.Helpers.WindowController
  langs:
  - csharp
  - vb
  name: ShowDialog(Window)
  nameWithType: WindowController.ShowDialog(Window)
  fullName: MBFWpfToolkit.Helpers.WindowController.ShowDialog(MicroBIM.UI.Controls.Window)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFWpfToolkit/blob/17914ba6724206c6757c3a2fff319217e9162479/Helpers/WindowController.cs
  assemblies:
  - MBFWpfToolkit
  namespace: MBFWpfToolkit.Helpers
  summary: Shows a modal dialog window and registers it in the controller.
  example: []
  syntax:
    content: public static bool? ShowDialog(Window window)
    parameters:
    - id: window
      type: MicroBIM.UI.Controls.Window
      description: The dialog window to show.
    return:
      type: System.Nullable{System.Boolean}
      description: True if the user accepted the dialog (DialogResult == true); otherwise, false.
    content.vb: Public Shared Function ShowDialog(window As Window) As Boolean?
  overload: MBFWpfToolkit.Helpers.WindowController.ShowDialog*
- uid: MBFWpfToolkit.Helpers.WindowController.ShowDialog(MicroBIM.UI.Controls.Window,System.IntPtr)
  commentId: M:MBFWpfToolkit.Helpers.WindowController.ShowDialog(MicroBIM.UI.Controls.Window,System.IntPtr)
  id: ShowDialog(MicroBIM.UI.Controls.Window,System.IntPtr)
  parent: MBFWpfToolkit.Helpers.WindowController
  langs:
  - csharp
  - vb
  name: ShowDialog(Window, IntPtr)
  nameWithType: WindowController.ShowDialog(Window, IntPtr)
  fullName: MBFWpfToolkit.Helpers.WindowController.ShowDialog(MicroBIM.UI.Controls.Window, System.IntPtr)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFWpfToolkit/blob/17914ba6724206c6757c3a2fff319217e9162479/Helpers/WindowController.cs
  assemblies:
  - MBFWpfToolkit
  namespace: MBFWpfToolkit.Helpers
  summary: Displays the specified <xref href="MicroBIM.UI.Controls.Window" data-throw-if-not-resolved="false"></xref> as a modal dialog and returns the result.
  remarks: >-
    This method sets the owner of the specified <xref href="MicroBIM.UI.Controls.Window" data-throw-if-not-resolved="false"></xref> using the provided handle before
                displaying it. Ensure that the <code class="paramref">handle</code> corresponds to a valid window handle to avoid unexpected
                behavior.
  example: []
  syntax:
    content: public static bool? ShowDialog(Window window, IntPtr handle)
    parameters:
    - id: window
      type: MicroBIM.UI.Controls.Window
      description: The <xref href="MicroBIM.UI.Controls.Window" data-throw-if-not-resolved="false"></xref> to display as a modal dialog. Cannot be null.
    - id: handle
      type: System.IntPtr
      description: A handle to the owner window. This establishes the ownership relationship between the dialog and the parent window.
    return:
      type: System.Nullable{System.Boolean}
      description: >-
        A nullable <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">bool</a> indicating the dialog result: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the user accepted the
                    dialog, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if the user canceled it,  or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if no result was specified.
    content.vb: Public Shared Function ShowDialog(window As Window, handle As IntPtr) As Boolean?
  overload: MBFWpfToolkit.Helpers.WindowController.ShowDialog*
- uid: MBFWpfToolkit.Helpers.WindowController.Show``1
  commentId: M:MBFWpfToolkit.Helpers.WindowController.Show``1
  id: Show``1
  parent: MBFWpfToolkit.Helpers.WindowController
  langs:
  - csharp
  - vb
  name: Show<T>()
  nameWithType: WindowController.Show<T>()
  fullName: MBFWpfToolkit.Helpers.WindowController.Show<T>()
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFWpfToolkit/blob/17914ba6724206c6757c3a2fff319217e9162479/Helpers/WindowController.cs
  assemblies:
  - MBFWpfToolkit
  namespace: MBFWpfToolkit.Helpers
  summary: Shows an already existing window of type <code class="typeparamref">T</code> if found.
  example: []
  syntax:
    content: 'public static void Show<T>() where T : Window'
    typeParameters:
    - id: T
      description: The type of the window to show.
    content.vb: Public Shared Sub Show(Of T As Window)()
  overload: MBFWpfToolkit.Helpers.WindowController.Show*
  nameWithType.vb: WindowController.Show(Of T)()
  fullName.vb: MBFWpfToolkit.Helpers.WindowController.Show(Of T)()
  name.vb: Show(Of T)()
- uid: MBFWpfToolkit.Helpers.WindowController.Hide``1
  commentId: M:MBFWpfToolkit.Helpers.WindowController.Hide``1
  id: Hide``1
  parent: MBFWpfToolkit.Helpers.WindowController
  langs:
  - csharp
  - vb
  name: Hide<T>()
  nameWithType: WindowController.Hide<T>()
  fullName: MBFWpfToolkit.Helpers.WindowController.Hide<T>()
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFWpfToolkit/blob/17914ba6724206c6757c3a2fff319217e9162479/Helpers/WindowController.cs
  assemblies:
  - MBFWpfToolkit
  namespace: MBFWpfToolkit.Helpers
  summary: Hides all windows of type <code class="typeparamref">T</code>.
  example: []
  syntax:
    content: 'public static void Hide<T>() where T : Window'
    typeParameters:
    - id: T
      description: The type of the window to hide.
    content.vb: Public Shared Sub Hide(Of T As Window)()
  overload: MBFWpfToolkit.Helpers.WindowController.Hide*
  nameWithType.vb: WindowController.Hide(Of T)()
  fullName.vb: MBFWpfToolkit.Helpers.WindowController.Hide(Of T)()
  name.vb: Hide(Of T)()
- uid: MBFWpfToolkit.Helpers.WindowController.Close``1
  commentId: M:MBFWpfToolkit.Helpers.WindowController.Close``1
  id: Close``1
  parent: MBFWpfToolkit.Helpers.WindowController
  langs:
  - csharp
  - vb
  name: Close<T>()
  nameWithType: WindowController.Close<T>()
  fullName: MBFWpfToolkit.Helpers.WindowController.Close<T>()
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBFWpfToolkit/blob/17914ba6724206c6757c3a2fff319217e9162479/Helpers/WindowController.cs
  assemblies:
  - MBFWpfToolkit
  namespace: MBFWpfToolkit.Helpers
  summary: Closes all windows of type <code class="typeparamref">T</code> and removes them from the tracking list.
  example: []
  syntax:
    content: 'public static void Close<T>() where T : Window'
    typeParameters:
    - id: T
      description: The type of the window to close.
    content.vb: Public Shared Sub Close(Of T As Window)()
  overload: MBFWpfToolkit.Helpers.WindowController.Close*
  nameWithType.vb: WindowController.Close(Of T)()
  fullName.vb: MBFWpfToolkit.Helpers.WindowController.Close(Of T)()
  name.vb: Close(Of T)()
references:
- uid: MBFWpfToolkit.Helpers
  commentId: N:MBFWpfToolkit.Helpers
  isExternal: true
  href: MBFWpfToolkit.html
  name: MBFWpfToolkit.Helpers
  nameWithType: MBFWpfToolkit.Helpers
  fullName: MBFWpfToolkit.Helpers
  spec.csharp:
  - uid: MBFWpfToolkit
    name: MBFWpfToolkit
    isExternal: true
    href: MBFWpfToolkit.html
  - name: .
  - uid: MBFWpfToolkit.Helpers
    name: Helpers
    isExternal: true
    href: MBFWpfToolkit.Helpers.html
  spec.vb:
  - uid: MBFWpfToolkit
    name: MBFWpfToolkit
    isExternal: true
    href: MBFWpfToolkit.html
  - name: .
  - uid: MBFWpfToolkit.Helpers
    name: Helpers
    isExternal: true
    href: MBFWpfToolkit.Helpers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MBFWpfToolkit.Helpers.WindowController.Focus*
  commentId: Overload:MBFWpfToolkit.Helpers.WindowController.Focus
  isExternal: true
  href: MBFWpfToolkit.Helpers.WindowController.html#MBFWpfToolkit_Helpers_WindowController_Focus__1
  name: Focus
  nameWithType: WindowController.Focus
  fullName: MBFWpfToolkit.Helpers.WindowController.Focus
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MBFWpfToolkit.Helpers.WindowController.Show*
  commentId: Overload:MBFWpfToolkit.Helpers.WindowController.Show
  isExternal: true
  href: MBFWpfToolkit.Helpers.WindowController.html#MBFWpfToolkit_Helpers_WindowController_Show_MicroBIM_UI_Controls_Window_
  name: Show
  nameWithType: WindowController.Show
  fullName: MBFWpfToolkit.Helpers.WindowController.Show
- uid: MicroBIM.UI.Controls.Window
  isExternal: true
  name: Window
  nameWithType: Window
  fullName: MicroBIM.UI.Controls.Window
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: MBFWpfToolkit.Helpers.WindowController.ShowDialog*
  commentId: Overload:MBFWpfToolkit.Helpers.WindowController.ShowDialog
  isExternal: true
  href: MBFWpfToolkit.Helpers.WindowController.html#MBFWpfToolkit_Helpers_WindowController_ShowDialog_MicroBIM_UI_Controls_Window_
  name: ShowDialog
  nameWithType: WindowController.ShowDialog
  fullName: MBFWpfToolkit.Helpers.WindowController.ShowDialog
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MBFWpfToolkit.Helpers.WindowController.Hide*
  commentId: Overload:MBFWpfToolkit.Helpers.WindowController.Hide
  isExternal: true
  href: MBFWpfToolkit.Helpers.WindowController.html#MBFWpfToolkit_Helpers_WindowController_Hide__1
  name: Hide
  nameWithType: WindowController.Hide
  fullName: MBFWpfToolkit.Helpers.WindowController.Hide
- uid: MBFWpfToolkit.Helpers.WindowController.Close*
  commentId: Overload:MBFWpfToolkit.Helpers.WindowController.Close
  isExternal: true
  href: MBFWpfToolkit.Helpers.WindowController.html#MBFWpfToolkit_Helpers_WindowController_Close__1
  name: Close
  nameWithType: WindowController.Close
  fullName: MBFWpfToolkit.Helpers.WindowController.Close
shouldSkipMarkup: true
