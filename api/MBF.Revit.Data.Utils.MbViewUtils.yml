### YamlMime:ManagedReference
items:
- uid: MBF.Revit.Data.Utils.MbViewUtils
  commentId: T:MBF.Revit.Data.Utils.MbViewUtils
  id: MbViewUtils
  parent: MBF.Revit.Data.Utils
  children:
  - MBF.Revit.Data.Utils.MbViewUtils.Create3DView(Autodesk.Revit.DB.Document)
  - MBF.Revit.Data.Utils.MbViewUtils.EnsureTemp3DViewIsOpen(Autodesk.Revit.DB.Document)
  - MBF.Revit.Data.Utils.MbViewUtils.GetAllPlanViews(Autodesk.Revit.DB.Document)
  - MBF.Revit.Data.Utils.MbViewUtils.GetAllThreeDViews(Autodesk.Revit.DB.Document)
  - MBF.Revit.Data.Utils.MbViewUtils.GetOrCreateTemp3D(Autodesk.Revit.DB.Document)
  - MBF.Revit.Data.Utils.MbViewUtils.GetTemp3DNoTransaction(Autodesk.Revit.DB.Document)
  - MBF.Revit.Data.Utils.MbViewUtils.IsGraphicalView(Autodesk.Revit.DB.View)
  - MBF.Revit.Data.Utils.MbViewUtils.ResetTemporaryIsolate
  - MBF.Revit.Data.Utils.MbViewUtils.TemporarilyIsolateElement(Autodesk.Revit.DB.Element)
  - MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement(Autodesk.Revit.DB.Element)
  - MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement(Autodesk.Revit.DB.ElementId)
  - MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement(Autodesk.Revit.DB.FamilyInstance)
  langs:
  - csharp
  - vb
  name: MbViewUtils
  nameWithType: MbViewUtils
  fullName: MBF.Revit.Data.Utils.MbViewUtils
  type: Class
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/4a4e0975ded0e7a98ad0e9bfffe5b78cd2e3d6c1/Utils/MbViewUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: >-
    Provides utility methods for working with Revit views, including graphical view checks, zooming to elements,

    creating temporary 3D views, and managing view isolation.
  remarks: >-
    This class contains static methods designed to simplify common operations related to Revit views. It

    includes functionality for determining view types, manipulating graphical views, and creating or managing temporary

    3D views. These utilities are intended to streamline workflows in Revit add-ins and enhance user interaction with

    views.
  example: []
  syntax:
    content: public static class MbViewUtils
    content.vb: Public Module MbViewUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MBF.Revit.Data.Utils.MbViewUtils.IsGraphicalView(Autodesk.Revit.DB.View)
  commentId: M:MBF.Revit.Data.Utils.MbViewUtils.IsGraphicalView(Autodesk.Revit.DB.View)
  id: IsGraphicalView(Autodesk.Revit.DB.View)
  parent: MBF.Revit.Data.Utils.MbViewUtils
  langs:
  - csharp
  - vb
  name: IsGraphicalView(View)
  nameWithType: MbViewUtils.IsGraphicalView(View)
  fullName: MBF.Revit.Data.Utils.MbViewUtils.IsGraphicalView(Autodesk.Revit.DB.View)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/4a4e0975ded0e7a98ad0e9bfffe5b78cd2e3d6c1/Utils/MbViewUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Determines whether the specified <xref href="Autodesk.Revit.DB.View" data-throw-if-not-resolved="false"></xref> represents a graphical view.
  remarks: >-
    Graphical views include types such as floor plans, ceiling plans, sections, elevations, 3D views,

    drafting views, area plans, engineering plans, details, and legends. Non-graphical views include schedules,

    reports,

    and undefined views.
  example: []
  syntax:
    content: public static bool IsGraphicalView(View view)
    parameters:
    - id: view
      type: Autodesk.Revit.DB.View
      description: The <xref href="Autodesk.Revit.DB.View" data-throw-if-not-resolved="false"></xref> to evaluate. Must not be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Boolean
      description: >-
        <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the <code class="paramref">view</code> is a graphical view, such as a floor plan, section, or 3D

        view; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Function IsGraphicalView(view As View) As Boolean
  overload: MBF.Revit.Data.Utils.MbViewUtils.IsGraphicalView*
- uid: MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement(Autodesk.Revit.DB.FamilyInstance)
  commentId: M:MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement(Autodesk.Revit.DB.FamilyInstance)
  id: ZoomToElement(Autodesk.Revit.DB.FamilyInstance)
  parent: MBF.Revit.Data.Utils.MbViewUtils
  langs:
  - csharp
  - vb
  name: ZoomToElement(FamilyInstance)
  nameWithType: MbViewUtils.ZoomToElement(FamilyInstance)
  fullName: MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement(Autodesk.Revit.DB.FamilyInstance)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/4a4e0975ded0e7a98ad0e9bfffe5b78cd2e3d6c1/Utils/MbViewUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Zooms and centers the active view on the specified <xref href="FamilyInstance" data-throw-if-not-resolved="false"></xref> element.
  remarks: >-
    This method adjusts the active view to focus on the bounding box of the specified element.  If

    the bounding box cannot be retrieved, an error message is displayed. The method works  only in graphical views

    such as plan, 3D, section, or legend views. If the active view is  not a supported graphical view, an error

    message is displayed.
  example: []
  syntax:
    content: public static void ZoomToElement(FamilyInstance instance)
    parameters:
    - id: instance
      type: Autodesk.Revit.DB.FamilyInstance
      description: The <xref href="FamilyInstance" data-throw-if-not-resolved="false"></xref> to zoom to. Must belong to the active document.
    content.vb: Public Shared Sub ZoomToElement(instance As FamilyInstance)
  overload: MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement*
- uid: MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement(Autodesk.Revit.DB.ElementId)
  commentId: M:MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement(Autodesk.Revit.DB.ElementId)
  id: ZoomToElement(Autodesk.Revit.DB.ElementId)
  parent: MBF.Revit.Data.Utils.MbViewUtils
  langs:
  - csharp
  - vb
  name: ZoomToElement(ElementId)
  nameWithType: MbViewUtils.ZoomToElement(ElementId)
  fullName: MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement(Autodesk.Revit.DB.ElementId)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/4a4e0975ded0e7a98ad0e9bfffe5b78cd2e3d6c1/Utils/MbViewUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Zooms and centers the active view on the specified element by its <xref href="ElementId" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    This method adjusts the active view to focus on the bounding box of the specified element. If the bounding box

    cannot be retrieved, an error message is displayed. The method works only in graphical views such as plan, 3D,

    section, or legend views. If the active view is not a supported graphical view, an error message is displayed.
  example: []
  syntax:
    content: public static void ZoomToElement(ElementId elementId)
    parameters:
    - id: elementId
      type: Autodesk.Revit.DB.ElementId
      description: The <xref href="ElementId" data-throw-if-not-resolved="false"></xref> of the element to zoom to. Must belong to the active document.
    content.vb: Public Shared Sub ZoomToElement(elementId As ElementId)
  overload: MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement*
- uid: MBF.Revit.Data.Utils.MbViewUtils.GetOrCreateTemp3D(Autodesk.Revit.DB.Document)
  commentId: M:MBF.Revit.Data.Utils.MbViewUtils.GetOrCreateTemp3D(Autodesk.Revit.DB.Document)
  id: GetOrCreateTemp3D(Autodesk.Revit.DB.Document)
  parent: MBF.Revit.Data.Utils.MbViewUtils
  langs:
  - csharp
  - vb
  name: GetOrCreateTemp3D(Document)
  nameWithType: MbViewUtils.GetOrCreateTemp3D(Document)
  fullName: MBF.Revit.Data.Utils.MbViewUtils.GetOrCreateTemp3D(Autodesk.Revit.DB.Document)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/4a4e0975ded0e7a98ad0e9bfffe5b78cd2e3d6c1/Utils/MbViewUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: >-
    Retrieves an existing 3D view named "Temp3DMBFire" from the specified document,  or creates a new one if it does

    not

    exist.
  remarks: >-
    This method first searches for an existing 3D view with the name "Temp3DMBFire".  If found, it

    returns the existing view wrapped in a successful <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref>.  If no such view exists, a new 3D

    view

    is created and returned.
  example: []
  syntax:
    content: public static MbResult<View3D> GetOrCreateTemp3D(Document doc)
    parameters:
    - id: doc
      type: Autodesk.Revit.DB.Document
      description: >-
        The <xref href="Autodesk.Revit.DB.Document" data-throw-if-not-resolved="false"></xref> from which to retrieve or create the 3D view.  This parameter cannot be

        <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>

        .
    return:
      type: MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.View3D}
      description: >-
        A <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing the 3D view. If a view named "Temp3DMBFire" exists,  it is returned;

        otherwise, a new 3D view is created and returned.
    content.vb: Public Shared Function GetOrCreateTemp3D(doc As Document) As MbResult(Of View3D)
  overload: MBF.Revit.Data.Utils.MbViewUtils.GetOrCreateTemp3D*
- uid: MBF.Revit.Data.Utils.MbViewUtils.Create3DView(Autodesk.Revit.DB.Document)
  commentId: M:MBF.Revit.Data.Utils.MbViewUtils.Create3DView(Autodesk.Revit.DB.Document)
  id: Create3DView(Autodesk.Revit.DB.Document)
  parent: MBF.Revit.Data.Utils.MbViewUtils
  langs:
  - csharp
  - vb
  name: Create3DView(Document)
  nameWithType: MbViewUtils.Create3DView(Document)
  fullName: MBF.Revit.Data.Utils.MbViewUtils.Create3DView(Autodesk.Revit.DB.Document)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/4a4e0975ded0e7a98ad0e9bfffe5b78cd2e3d6c1/Utils/MbViewUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Creates a new isometric 3D view in the specified document.
  remarks: >-
    This method attempts to create a new isometric 3D view by copying the settings from an existing

    non-template 3D view in the document. The new view is named "Temp3DMBFire" and has its detail level set to

    ViewDetailLevel.Fine.
  example: []
  syntax:
    content: public static MbResult<View3D> Create3DView(Document doc)
    parameters:
    - id: doc
      type: Autodesk.Revit.DB.Document
      description: The Revit document in which the 3D view will be created. Cannot be null.
    return:
      type: MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.View3D}
      description: >-
        <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing the result of the operation:

        <ul><li>
                    <b>Success:</b> Returns a successful <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing the newly created
                    <xref href="Autodesk.Revit.DB.View3D" data-throw-if-not-resolved="false"></xref>.
                </li><li>
                    <b>Failure:</b> Returns a failed <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> with an error message if:
                    <ul><li>No 3D view type is found to copy from.</li><li>The <xref href="Autodesk.Revit.DB.ViewFamilyType" data-throw-if-not-resolved="false"></xref> could not be retrieved.</li><li>Failure to create the 3D view.</li></ul>
                </li></ul>
    content.vb: Public Shared Function Create3DView(doc As Document) As MbResult(Of View3D)
  overload: MBF.Revit.Data.Utils.MbViewUtils.Create3DView*
- uid: MBF.Revit.Data.Utils.MbViewUtils.EnsureTemp3DViewIsOpen(Autodesk.Revit.DB.Document)
  commentId: M:MBF.Revit.Data.Utils.MbViewUtils.EnsureTemp3DViewIsOpen(Autodesk.Revit.DB.Document)
  id: EnsureTemp3DViewIsOpen(Autodesk.Revit.DB.Document)
  parent: MBF.Revit.Data.Utils.MbViewUtils
  langs:
  - csharp
  - vb
  name: EnsureTemp3DViewIsOpen(Document)
  nameWithType: MbViewUtils.EnsureTemp3DViewIsOpen(Document)
  fullName: MBF.Revit.Data.Utils.MbViewUtils.EnsureTemp3DViewIsOpen(Autodesk.Revit.DB.Document)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/4a4e0975ded0e7a98ad0e9bfffe5b78cd2e3d6c1/Utils/MbViewUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Creates and opens the temporary 3D view if it's not already opened in the UI.
  example: []
  syntax:
    content: public static void EnsureTemp3DViewIsOpen(Document activeDoc)
    parameters:
    - id: activeDoc
      type: Autodesk.Revit.DB.Document
      description: The active document wrapper.
    content.vb: Public Shared Sub EnsureTemp3DViewIsOpen(activeDoc As Document)
  overload: MBF.Revit.Data.Utils.MbViewUtils.EnsureTemp3DViewIsOpen*
- uid: MBF.Revit.Data.Utils.MbViewUtils.GetTemp3DNoTransaction(Autodesk.Revit.DB.Document)
  commentId: M:MBF.Revit.Data.Utils.MbViewUtils.GetTemp3DNoTransaction(Autodesk.Revit.DB.Document)
  id: GetTemp3DNoTransaction(Autodesk.Revit.DB.Document)
  parent: MBF.Revit.Data.Utils.MbViewUtils
  langs:
  - csharp
  - vb
  name: GetTemp3DNoTransaction(Document)
  nameWithType: MbViewUtils.GetTemp3DNoTransaction(Document)
  fullName: MBF.Revit.Data.Utils.MbViewUtils.GetTemp3DNoTransaction(Autodesk.Revit.DB.Document)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/4a4e0975ded0e7a98ad0e9bfffe5b78cd2e3d6c1/Utils/MbViewUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Retrieves a temporary 3D view for the specified document without initiating a transaction.
  example: []
  syntax:
    content: public static MbResult<View3D> GetTemp3DNoTransaction(Document doc)
    parameters:
    - id: doc
      type: Autodesk.Revit.DB.Document
      description: The document for which the temporary 3D view is to be retrieved or created. Cannot be null.
    return:
      type: MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.View3D}
      description: >-
        A <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing the temporary 3D view if successful, or an error result if the operation

        fails.
    content.vb: Public Shared Function GetTemp3DNoTransaction(doc As Document) As MbResult(Of View3D)
  overload: MBF.Revit.Data.Utils.MbViewUtils.GetTemp3DNoTransaction*
- uid: MBF.Revit.Data.Utils.MbViewUtils.GetAllPlanViews(Autodesk.Revit.DB.Document)
  commentId: M:MBF.Revit.Data.Utils.MbViewUtils.GetAllPlanViews(Autodesk.Revit.DB.Document)
  id: GetAllPlanViews(Autodesk.Revit.DB.Document)
  parent: MBF.Revit.Data.Utils.MbViewUtils
  langs:
  - csharp
  - vb
  name: GetAllPlanViews(Document)
  nameWithType: MbViewUtils.GetAllPlanViews(Document)
  fullName: MBF.Revit.Data.Utils.MbViewUtils.GetAllPlanViews(Autodesk.Revit.DB.Document)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/4a4e0975ded0e7a98ad0e9bfffe5b78cd2e3d6c1/Utils/MbViewUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Retrieves all non-template plan views from the specified Revit document.
  example: []
  syntax:
    content: public static IList<ViewPlan> GetAllPlanViews(Document doc)
    parameters:
    - id: doc
      type: Autodesk.Revit.DB.Document
      description: The Revit document from which to retrieve the plan views. Cannot be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Collections.Generic.IList{Autodesk.Revit.DB.ViewPlan}
      description: >-
        A list of <xref href="Autodesk.Revit.DB.ViewPlan" data-throw-if-not-resolved="false"></xref> objects representing all non-template plan views in the document.  Returns an

        empty

        list if no such views are found.
    content.vb: Public Shared Function GetAllPlanViews(doc As Document) As IList(Of ViewPlan)
  overload: MBF.Revit.Data.Utils.MbViewUtils.GetAllPlanViews*
- uid: MBF.Revit.Data.Utils.MbViewUtils.GetAllThreeDViews(Autodesk.Revit.DB.Document)
  commentId: M:MBF.Revit.Data.Utils.MbViewUtils.GetAllThreeDViews(Autodesk.Revit.DB.Document)
  id: GetAllThreeDViews(Autodesk.Revit.DB.Document)
  parent: MBF.Revit.Data.Utils.MbViewUtils
  langs:
  - csharp
  - vb
  name: GetAllThreeDViews(Document)
  nameWithType: MbViewUtils.GetAllThreeDViews(Document)
  fullName: MBF.Revit.Data.Utils.MbViewUtils.GetAllThreeDViews(Autodesk.Revit.DB.Document)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/4a4e0975ded0e7a98ad0e9bfffe5b78cd2e3d6c1/Utils/MbViewUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Retrieves all 3D views in the specified Revit document that are not templates.
  example: []
  syntax:
    content: public static List<View3D> GetAllThreeDViews(Document doc)
    parameters:
    - id: doc
      type: Autodesk.Revit.DB.Document
      description: The Revit document from which to retrieve the 3D views. Cannot be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Collections.Generic.List{Autodesk.Revit.DB.View3D}
      description: >-
        A list of <xref href="Autodesk.Revit.DB.View3D" data-throw-if-not-resolved="false"></xref> objects representing all non-template 3D views in the document. Returns an empty

        list

        if no such views are found.
    content.vb: Public Shared Function GetAllThreeDViews(doc As Document) As List(Of View3D)
  overload: MBF.Revit.Data.Utils.MbViewUtils.GetAllThreeDViews*
- uid: MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement(Autodesk.Revit.DB.Element)
  commentId: M:MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement(Autodesk.Revit.DB.Element)
  id: ZoomToElement(Autodesk.Revit.DB.Element)
  parent: MBF.Revit.Data.Utils.MbViewUtils
  langs:
  - csharp
  - vb
  name: ZoomToElement(Element)
  nameWithType: MbViewUtils.ZoomToElement(Element)
  fullName: MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement(Autodesk.Revit.DB.Element)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/4a4e0975ded0e7a98ad0e9bfffe5b78cd2e3d6c1/Utils/MbViewUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Zooms and centers the active view on the specified element's bounding box.
  remarks: >-
    This method adjusts the active view to focus on the bounding box of the specified element.  If the

    bounding box cannot be retrieved or the active view is not a graphical view (e.g., plan, 3D view, section, or

    legend),  an error message is displayed, and no action is taken. The method also optionally selects the element in

    the active view.
  example: []
  syntax:
    content: public static void ZoomToElement(Element element)
    parameters:
    - id: element
      type: Autodesk.Revit.DB.Element
      description: >-
        The element to zoom to. Must belong to the active document and have a valid bounding box in the

        active view.
    content.vb: Public Shared Sub ZoomToElement(element As Element)
  overload: MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement*
- uid: MBF.Revit.Data.Utils.MbViewUtils.TemporarilyIsolateElement(Autodesk.Revit.DB.Element)
  commentId: M:MBF.Revit.Data.Utils.MbViewUtils.TemporarilyIsolateElement(Autodesk.Revit.DB.Element)
  id: TemporarilyIsolateElement(Autodesk.Revit.DB.Element)
  parent: MBF.Revit.Data.Utils.MbViewUtils
  langs:
  - csharp
  - vb
  name: TemporarilyIsolateElement(Element)
  nameWithType: MbViewUtils.TemporarilyIsolateElement(Element)
  fullName: MBF.Revit.Data.Utils.MbViewUtils.TemporarilyIsolateElement(Autodesk.Revit.DB.Element)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/4a4e0975ded0e7a98ad0e9bfffe5b78cd2e3d6c1/Utils/MbViewUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Temporarily isolates the specified element in the active graphical view.
  remarks: >-
    This method isolates the specified element temporarily in the active view of the document.  Isolation

    is only supported in graphical views. If the active view is not graphical, the method  displays a warning message

    and returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>. If an error occurs during the  isolation process, an error message is

    displayed, and the method returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public static bool TemporarilyIsolateElement(Element element)
    parameters:
    - id: element
      type: Autodesk.Revit.DB.Element
      description: The element to isolate. Must belong to the document of the active view.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the element was successfully isolated; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Function TemporarilyIsolateElement(element As Element) As Boolean
  overload: MBF.Revit.Data.Utils.MbViewUtils.TemporarilyIsolateElement*
- uid: MBF.Revit.Data.Utils.MbViewUtils.ResetTemporaryIsolate
  commentId: M:MBF.Revit.Data.Utils.MbViewUtils.ResetTemporaryIsolate
  id: ResetTemporaryIsolate
  parent: MBF.Revit.Data.Utils.MbViewUtils
  langs:
  - csharp
  - vb
  name: ResetTemporaryIsolate()
  nameWithType: MbViewUtils.ResetTemporaryIsolate()
  fullName: MBF.Revit.Data.Utils.MbViewUtils.ResetTemporaryIsolate()
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/4a4e0975ded0e7a98ad0e9bfffe5b78cd2e3d6c1/Utils/MbViewUtils.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.Utils
  summary: Resets the temporary isolate mode for the active view, if it is currently enabled.
  remarks: >-
    This method checks if the active view has temporary isolate mode enabled and, if so, disables it. If

    no active view exists or temporary isolate mode is not active, the method performs no action.
  example: []
  syntax:
    content: public static void ResetTemporaryIsolate()
    content.vb: Public Shared Sub ResetTemporaryIsolate()
  overload: MBF.Revit.Data.Utils.MbViewUtils.ResetTemporaryIsolate*
references:
- uid: MBF.Revit.Data.Utils
  commentId: N:MBF.Revit.Data.Utils
  isExternal: true
  href: MBF.html
  name: MBF.Revit.Data.Utils
  nameWithType: MBF.Revit.Data.Utils
  fullName: MBF.Revit.Data.Utils
  spec.csharp:
  - uid: MBF
    name: MBF
    isExternal: true
    href: MBF.html
  - name: .
  - uid: MBF.Revit
    name: Revit
    isExternal: true
    href: MBF.Revit.html
  - name: .
  - uid: MBF.Revit.Data
    name: Data
    isExternal: true
    href: MBF.Revit.Data.html
  - name: .
  - uid: MBF.Revit.Data.Utils
    name: Utils
    isExternal: true
    href: MBF.Revit.Data.Utils.html
  spec.vb:
  - uid: MBF
    name: MBF
    isExternal: true
    href: MBF.html
  - name: .
  - uid: MBF.Revit
    name: Revit
    isExternal: true
    href: MBF.Revit.html
  - name: .
  - uid: MBF.Revit.Data
    name: Data
    isExternal: true
    href: MBF.Revit.Data.html
  - name: .
  - uid: MBF.Revit.Data.Utils
    name: Utils
    isExternal: true
    href: MBF.Revit.Data.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Autodesk.Revit.DB.View
  isExternal: true
  name: View
  nameWithType: View
  fullName: Autodesk.Revit.DB.View
- uid: MBF.Revit.Data.Utils.MbViewUtils.IsGraphicalView*
  commentId: Overload:MBF.Revit.Data.Utils.MbViewUtils.IsGraphicalView
  isExternal: true
  href: MBF.Revit.Data.Utils.MbViewUtils.html#MBF_Revit_Data_Utils_MbViewUtils_IsGraphicalView_Autodesk_Revit_DB_View_
  name: IsGraphicalView
  nameWithType: MbViewUtils.IsGraphicalView
  fullName: MBF.Revit.Data.Utils.MbViewUtils.IsGraphicalView
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: FamilyInstance
  commentId: T:FamilyInstance
  isExternal: true
- uid: MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement*
  commentId: Overload:MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement
  isExternal: true
  href: MBF.Revit.Data.Utils.MbViewUtils.html#MBF_Revit_Data_Utils_MbViewUtils_ZoomToElement_Autodesk_Revit_DB_FamilyInstance_
  name: ZoomToElement
  nameWithType: MbViewUtils.ZoomToElement
  fullName: MBF.Revit.Data.Utils.MbViewUtils.ZoomToElement
- uid: Autodesk.Revit.DB.FamilyInstance
  isExternal: true
  name: FamilyInstance
  nameWithType: FamilyInstance
  fullName: Autodesk.Revit.DB.FamilyInstance
- uid: ElementId
  commentId: T:ElementId
  isExternal: true
- uid: Autodesk.Revit.DB.ElementId
  isExternal: true
  name: ElementId
  nameWithType: ElementId
  fullName: Autodesk.Revit.DB.ElementId
- uid: MB.Common.Utils.Result.MbResult`1
  commentId: T:MB.Common.Utils.Result.MbResult`1
  parent: MB.Common.Utils.Result
  isExternal: true
  href: MB.Common.Utils.Result.MbResult-1.html
  name: MbResult<T>
  nameWithType: MbResult<T>
  fullName: MB.Common.Utils.Result.MbResult<T>
  nameWithType.vb: MbResult(Of T)
  fullName.vb: MB.Common.Utils.Result.MbResult(Of T)
  name.vb: MbResult(Of T)
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
    href: MB.Common.Utils.Result.MbResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
    href: MB.Common.Utils.Result.MbResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Autodesk.Revit.DB.Document
  commentId: T:Autodesk.Revit.DB.Document
  isExternal: true
  name: Document
  nameWithType: Document
  fullName: Autodesk.Revit.DB.Document
- uid: MBF.Revit.Data.Utils.MbViewUtils.GetOrCreateTemp3D*
  commentId: Overload:MBF.Revit.Data.Utils.MbViewUtils.GetOrCreateTemp3D
  isExternal: true
  href: MBF.Revit.Data.Utils.MbViewUtils.html#MBF_Revit_Data_Utils_MbViewUtils_GetOrCreateTemp3D_Autodesk_Revit_DB_Document_
  name: GetOrCreateTemp3D
  nameWithType: MbViewUtils.GetOrCreateTemp3D
  fullName: MBF.Revit.Data.Utils.MbViewUtils.GetOrCreateTemp3D
- uid: MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.View3D}
  commentId: T:MB.Common.Utils.Result.MbResult{Autodesk.Revit.DB.View3D}
  parent: MB.Common.Utils.Result
  definition: MB.Common.Utils.Result.MbResult`1
  name: MbResult<View3D>
  nameWithType: MbResult<View3D>
  fullName: MB.Common.Utils.Result.MbResult<Autodesk.Revit.DB.View3D>
  nameWithType.vb: MbResult(Of View3D)
  fullName.vb: MB.Common.Utils.Result.MbResult(Of Autodesk.Revit.DB.View3D)
  name.vb: MbResult(Of View3D)
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: <
  - uid: Autodesk.Revit.DB.View3D
    name: View3D
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Autodesk.Revit.DB.View3D
    name: View3D
    isExternal: true
  - name: )
- uid: MB.Common.Utils.Result
  commentId: N:MB.Common.Utils.Result
  isExternal: true
  href: MB.html
  name: MB.Common.Utils.Result
  nameWithType: MB.Common.Utils.Result
  fullName: MB.Common.Utils.Result
  spec.csharp:
  - uid: MB
    name: MB
    isExternal: true
    href: MB.html
  - name: .
  - uid: MB.Common
    name: Common
    isExternal: true
    href: MB.Common.html
  - name: .
  - uid: MB.Common.Utils
    name: Utils
    isExternal: true
    href: MB.Common.Utils.html
  - name: .
  - uid: MB.Common.Utils.Result
    name: Result
    isExternal: true
    href: MB.Common.Utils.Result.html
  spec.vb:
  - uid: MB
    name: MB
    isExternal: true
    href: MB.html
  - name: .
  - uid: MB.Common
    name: Common
    isExternal: true
    href: MB.Common.html
  - name: .
  - uid: MB.Common.Utils
    name: Utils
    isExternal: true
    href: MB.Common.Utils.html
  - name: .
  - uid: MB.Common.Utils.Result
    name: Result
    isExternal: true
    href: MB.Common.Utils.Result.html
- uid: Autodesk.Revit.DB.View3D
  commentId: T:Autodesk.Revit.DB.View3D
  isExternal: true
- uid: Autodesk.Revit.DB.ViewFamilyType
  commentId: T:Autodesk.Revit.DB.ViewFamilyType
  isExternal: true
- uid: MBF.Revit.Data.Utils.MbViewUtils.Create3DView*
  commentId: Overload:MBF.Revit.Data.Utils.MbViewUtils.Create3DView
  isExternal: true
  href: MBF.Revit.Data.Utils.MbViewUtils.html#MBF_Revit_Data_Utils_MbViewUtils_Create3DView_Autodesk_Revit_DB_Document_
  name: Create3DView
  nameWithType: MbViewUtils.Create3DView
  fullName: MBF.Revit.Data.Utils.MbViewUtils.Create3DView
- uid: MBF.Revit.Data.Utils.MbViewUtils.EnsureTemp3DViewIsOpen*
  commentId: Overload:MBF.Revit.Data.Utils.MbViewUtils.EnsureTemp3DViewIsOpen
  isExternal: true
  href: MBF.Revit.Data.Utils.MbViewUtils.html#MBF_Revit_Data_Utils_MbViewUtils_EnsureTemp3DViewIsOpen_Autodesk_Revit_DB_Document_
  name: EnsureTemp3DViewIsOpen
  nameWithType: MbViewUtils.EnsureTemp3DViewIsOpen
  fullName: MBF.Revit.Data.Utils.MbViewUtils.EnsureTemp3DViewIsOpen
- uid: MBF.Revit.Data.Utils.MbViewUtils.GetTemp3DNoTransaction*
  commentId: Overload:MBF.Revit.Data.Utils.MbViewUtils.GetTemp3DNoTransaction
  isExternal: true
  href: MBF.Revit.Data.Utils.MbViewUtils.html#MBF_Revit_Data_Utils_MbViewUtils_GetTemp3DNoTransaction_Autodesk_Revit_DB_Document_
  name: GetTemp3DNoTransaction
  nameWithType: MbViewUtils.GetTemp3DNoTransaction
  fullName: MBF.Revit.Data.Utils.MbViewUtils.GetTemp3DNoTransaction
- uid: Autodesk.Revit.DB.ViewPlan
  commentId: T:Autodesk.Revit.DB.ViewPlan
  isExternal: true
- uid: MBF.Revit.Data.Utils.MbViewUtils.GetAllPlanViews*
  commentId: Overload:MBF.Revit.Data.Utils.MbViewUtils.GetAllPlanViews
  isExternal: true
  href: MBF.Revit.Data.Utils.MbViewUtils.html#MBF_Revit_Data_Utils_MbViewUtils_GetAllPlanViews_Autodesk_Revit_DB_Document_
  name: GetAllPlanViews
  nameWithType: MbViewUtils.GetAllPlanViews
  fullName: MBF.Revit.Data.Utils.MbViewUtils.GetAllPlanViews
- uid: System.Collections.Generic.IList{Autodesk.Revit.DB.ViewPlan}
  commentId: T:System.Collections.Generic.IList{Autodesk.Revit.DB.ViewPlan}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<ViewPlan>
  nameWithType: IList<ViewPlan>
  fullName: System.Collections.Generic.IList<Autodesk.Revit.DB.ViewPlan>
  nameWithType.vb: IList(Of ViewPlan)
  fullName.vb: System.Collections.Generic.IList(Of Autodesk.Revit.DB.ViewPlan)
  name.vb: IList(Of ViewPlan)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Autodesk.Revit.DB.ViewPlan
    name: ViewPlan
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Autodesk.Revit.DB.ViewPlan
    name: ViewPlan
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MBF.Revit.Data.Utils.MbViewUtils.GetAllThreeDViews*
  commentId: Overload:MBF.Revit.Data.Utils.MbViewUtils.GetAllThreeDViews
  isExternal: true
  href: MBF.Revit.Data.Utils.MbViewUtils.html#MBF_Revit_Data_Utils_MbViewUtils_GetAllThreeDViews_Autodesk_Revit_DB_Document_
  name: GetAllThreeDViews
  nameWithType: MbViewUtils.GetAllThreeDViews
  fullName: MBF.Revit.Data.Utils.MbViewUtils.GetAllThreeDViews
- uid: System.Collections.Generic.List{Autodesk.Revit.DB.View3D}
  commentId: T:System.Collections.Generic.List{Autodesk.Revit.DB.View3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<View3D>
  nameWithType: List<View3D>
  fullName: System.Collections.Generic.List<Autodesk.Revit.DB.View3D>
  nameWithType.vb: List(Of View3D)
  fullName.vb: System.Collections.Generic.List(Of Autodesk.Revit.DB.View3D)
  name.vb: List(Of View3D)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Autodesk.Revit.DB.View3D
    name: View3D
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Autodesk.Revit.DB.View3D
    name: View3D
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Autodesk.Revit.DB.Element
  isExternal: true
  name: Element
  nameWithType: Element
  fullName: Autodesk.Revit.DB.Element
- uid: MBF.Revit.Data.Utils.MbViewUtils.TemporarilyIsolateElement*
  commentId: Overload:MBF.Revit.Data.Utils.MbViewUtils.TemporarilyIsolateElement
  isExternal: true
  href: MBF.Revit.Data.Utils.MbViewUtils.html#MBF_Revit_Data_Utils_MbViewUtils_TemporarilyIsolateElement_Autodesk_Revit_DB_Element_
  name: TemporarilyIsolateElement
  nameWithType: MbViewUtils.TemporarilyIsolateElement
  fullName: MBF.Revit.Data.Utils.MbViewUtils.TemporarilyIsolateElement
- uid: MBF.Revit.Data.Utils.MbViewUtils.ResetTemporaryIsolate*
  commentId: Overload:MBF.Revit.Data.Utils.MbViewUtils.ResetTemporaryIsolate
  isExternal: true
  href: MBF.Revit.Data.Utils.MbViewUtils.html#MBF_Revit_Data_Utils_MbViewUtils_ResetTemporaryIsolate
  name: ResetTemporaryIsolate
  nameWithType: MbViewUtils.ResetTemporaryIsolate
  fullName: MBF.Revit.Data.Utils.MbViewUtils.ResetTemporaryIsolate
shouldSkipMarkup: true
