### YamlMime:ManagedReference
items:
- uid: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter
  commentId: T:MBF.Revit.Data.SelectionFilters.FaceSelectionFilter
  id: FaceSelectionFilter
  parent: MBF.Revit.Data.SelectionFilters
  children:
  - MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.#ctor(Autodesk.Revit.DB.Document)
  - MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.#ctor(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.BuiltInCategory)
  - MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowElement(Autodesk.Revit.DB.Element)
  - MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowReference(Autodesk.Revit.DB.Reference,Autodesk.Revit.DB.XYZ)
  langs:
  - csharp
  - vb
  name: FaceSelectionFilter
  nameWithType: FaceSelectionFilter
  fullName: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter
  type: Class
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/253b5d8129b6e5c10d98b6c3ed591eb52b009297/SelectionFilters/FaceSelectionFilter.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.SelectionFilters
  summary: >-
    Provides a selection filter for Revit elements and references, allowing selection of elements based on their

    category and ensuring that references correspond to geometric faces.
  remarks: >-
    This filter can be used to restrict element selection to specific categories or to ensure that only

    face references are considered valid. It supports two modes of operation:

    <ul><li>Allowing all element categories by default.</li><li>
                Restricting
                selection to specific categories by providing a list of allowed categories.
            </li></ul>
    The filter

    is particularly useful in scenarios where precise control over element or reference selection is required, such as

    in custom Revit add-ins or tools.
  example: []
  syntax:
    content: 'public class FaceSelectionFilter : ISelectionFilter'
    content.vb: Public Class FaceSelectionFilter Implements ISelectionFilter
  inheritance:
  - System.Object
  implements:
  - Autodesk.Revit.UI.Selection.ISelectionFilter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.#ctor(Autodesk.Revit.DB.Document)
  commentId: M:MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.#ctor(Autodesk.Revit.DB.Document)
  id: '#ctor(Autodesk.Revit.DB.Document)'
  parent: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter
  langs:
  - csharp
  - vb
  name: FaceSelectionFilter(Document)
  nameWithType: FaceSelectionFilter.FaceSelectionFilter(Document)
  fullName: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.FaceSelectionFilter(Autodesk.Revit.DB.Document)
  type: Constructor
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/253b5d8129b6e5c10d98b6c3ed591eb52b009297/SelectionFilters/FaceSelectionFilter.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.SelectionFilters
  summary: Initializes a new instance of the <xref href="MBF.Revit.Data.SelectionFilters.FaceSelectionFilter" data-throw-if-not-resolved="false"></xref> that allows all element categories.
  example: []
  syntax:
    content: public FaceSelectionFilter(Document document)
    parameters:
    - id: document
      type: Autodesk.Revit.DB.Document
      description: The current Revit document.
    content.vb: Public Sub New(document As Document)
  overload: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.#ctor*
  nameWithType.vb: FaceSelectionFilter.New(Document)
  fullName.vb: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.New(Autodesk.Revit.DB.Document)
  name.vb: New(Document)
- uid: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.#ctor(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.BuiltInCategory)
  commentId: M:MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.#ctor(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.BuiltInCategory)
  id: '#ctor(Autodesk.Revit.DB.Document,Autodesk.Revit.DB.BuiltInCategory)'
  parent: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter
  langs:
  - csharp
  - vb
  name: FaceSelectionFilter(Document, BuiltInCategory)
  nameWithType: FaceSelectionFilter.FaceSelectionFilter(Document, BuiltInCategory)
  fullName: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.FaceSelectionFilter(Autodesk.Revit.DB.Document, Autodesk.Revit.DB.BuiltInCategory)
  type: Constructor
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/253b5d8129b6e5c10d98b6c3ed591eb52b009297/SelectionFilters/FaceSelectionFilter.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.SelectionFilters
  summary: >-
    Initializes a new instance of the <xref href="MBF.Revit.Data.SelectionFilters.FaceSelectionFilter" data-throw-if-not-resolved="false"></xref> that only allows elements from the specified

    category.
  example: []
  syntax:
    content: public FaceSelectionFilter(Document document, BuiltInCategory category)
    parameters:
    - id: document
      type: Autodesk.Revit.DB.Document
      description: The current Revit document.
    - id: category
      type: Autodesk.Revit.DB.BuiltInCategory
      description: A single allowed <xref href="BuiltInCategory" data-throw-if-not-resolved="false"></xref> for selection.
    content.vb: Public Sub New(document As Document, category As BuiltInCategory)
  overload: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.#ctor*
  nameWithType.vb: FaceSelectionFilter.New(Document, BuiltInCategory)
  fullName.vb: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.New(Autodesk.Revit.DB.Document, Autodesk.Revit.DB.BuiltInCategory)
  name.vb: New(Document, BuiltInCategory)
- uid: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowElement(Autodesk.Revit.DB.Element)
  commentId: M:MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowElement(Autodesk.Revit.DB.Element)
  id: AllowElement(Autodesk.Revit.DB.Element)
  parent: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter
  langs:
  - csharp
  - vb
  name: AllowElement(Element)
  nameWithType: FaceSelectionFilter.AllowElement(Element)
  fullName: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowElement(Autodesk.Revit.DB.Element)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/253b5d8129b6e5c10d98b6c3ed591eb52b009297/SelectionFilters/FaceSelectionFilter.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.SelectionFilters
  summary: Determines whether the given element is eligible for selection based on its category.
  example: []
  syntax:
    content: public bool AllowElement(Element element)
    parameters:
    - id: element
      type: Autodesk.Revit.DB.Element
      description: The element to evaluate.
    return:
      type: System.Boolean
      description: <code>true</code> if the element is in the allowed category list (or all are allowed); otherwise, <code>false</code>.
    content.vb: Public Function AllowElement(element As Element) As Boolean
  overload: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowElement*
- uid: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowReference(Autodesk.Revit.DB.Reference,Autodesk.Revit.DB.XYZ)
  commentId: M:MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowReference(Autodesk.Revit.DB.Reference,Autodesk.Revit.DB.XYZ)
  id: AllowReference(Autodesk.Revit.DB.Reference,Autodesk.Revit.DB.XYZ)
  parent: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter
  langs:
  - csharp
  - vb
  name: AllowReference(Reference, XYZ)
  nameWithType: FaceSelectionFilter.AllowReference(Reference, XYZ)
  fullName: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowReference(Autodesk.Revit.DB.Reference, Autodesk.Revit.DB.XYZ)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/253b5d8129b6e5c10d98b6c3ed591eb52b009297/SelectionFilters/FaceSelectionFilter.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.SelectionFilters
  summary: Determines whether the referenced geometry is a face.
  example: []
  syntax:
    content: public bool AllowReference(Reference refer, XYZ point)
    parameters:
    - id: refer
      type: Autodesk.Revit.DB.Reference
      description: The reference to check.
    - id: point
      type: Autodesk.Revit.DB.XYZ
      description: The point on the geometry (not used).
    return:
      type: System.Boolean
      description: <code>true</code> if the reference is to a face; otherwise, <code>false</code>.
    content.vb: Public Function AllowReference(refer As Reference, point As XYZ) As Boolean
  overload: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowReference*
references:
- uid: MBF.Revit.Data.SelectionFilters
  commentId: N:MBF.Revit.Data.SelectionFilters
  isExternal: true
  href: MBF.html
  name: MBF.Revit.Data.SelectionFilters
  nameWithType: MBF.Revit.Data.SelectionFilters
  fullName: MBF.Revit.Data.SelectionFilters
  spec.csharp:
  - uid: MBF
    name: MBF
    isExternal: true
    href: MBF.html
  - name: .
  - uid: MBF.Revit
    name: Revit
    isExternal: true
    href: MBF.Revit.html
  - name: .
  - uid: MBF.Revit.Data
    name: Data
    isExternal: true
    href: MBF.Revit.Data.html
  - name: .
  - uid: MBF.Revit.Data.SelectionFilters
    name: SelectionFilters
    isExternal: true
    href: MBF.Revit.Data.SelectionFilters.html
  spec.vb:
  - uid: MBF
    name: MBF
    isExternal: true
    href: MBF.html
  - name: .
  - uid: MBF.Revit
    name: Revit
    isExternal: true
    href: MBF.Revit.html
  - name: .
  - uid: MBF.Revit.Data
    name: Data
    isExternal: true
    href: MBF.Revit.Data.html
  - name: .
  - uid: MBF.Revit.Data.SelectionFilters
    name: SelectionFilters
    isExternal: true
    href: MBF.Revit.Data.SelectionFilters.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Autodesk.Revit.UI.Selection.ISelectionFilter
  isExternal: true
  name: ISelectionFilter
  nameWithType: ISelectionFilter
  fullName: Autodesk.Revit.UI.Selection.ISelectionFilter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter
  commentId: T:MBF.Revit.Data.SelectionFilters.FaceSelectionFilter
  isExternal: true
  href: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.html
  name: FaceSelectionFilter
  nameWithType: FaceSelectionFilter
  fullName: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter
- uid: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.#ctor*
  commentId: Overload:MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.#ctor
  isExternal: true
  href: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.html#MBF_Revit_Data_SelectionFilters_FaceSelectionFilter__ctor_Autodesk_Revit_DB_Document_
  name: FaceSelectionFilter
  nameWithType: FaceSelectionFilter.FaceSelectionFilter
  fullName: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.FaceSelectionFilter
  nameWithType.vb: FaceSelectionFilter.New
  fullName.vb: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.New
  name.vb: New
- uid: Autodesk.Revit.DB.Document
  isExternal: true
  name: Document
  nameWithType: Document
  fullName: Autodesk.Revit.DB.Document
- uid: BuiltInCategory
  commentId: T:BuiltInCategory
  isExternal: true
- uid: Autodesk.Revit.DB.BuiltInCategory
  isExternal: true
  name: BuiltInCategory
  nameWithType: BuiltInCategory
  fullName: Autodesk.Revit.DB.BuiltInCategory
- uid: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowElement*
  commentId: Overload:MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowElement
  isExternal: true
  href: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.html#MBF_Revit_Data_SelectionFilters_FaceSelectionFilter_AllowElement_Autodesk_Revit_DB_Element_
  name: AllowElement
  nameWithType: FaceSelectionFilter.AllowElement
  fullName: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowElement
- uid: Autodesk.Revit.DB.Element
  isExternal: true
  name: Element
  nameWithType: Element
  fullName: Autodesk.Revit.DB.Element
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowReference*
  commentId: Overload:MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowReference
  isExternal: true
  href: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.html#MBF_Revit_Data_SelectionFilters_FaceSelectionFilter_AllowReference_Autodesk_Revit_DB_Reference_Autodesk_Revit_DB_XYZ_
  name: AllowReference
  nameWithType: FaceSelectionFilter.AllowReference
  fullName: MBF.Revit.Data.SelectionFilters.FaceSelectionFilter.AllowReference
- uid: Autodesk.Revit.DB.Reference
  commentId: T:Autodesk.Revit.DB.Reference
  isExternal: true
  name: Reference
  nameWithType: Reference
  fullName: Autodesk.Revit.DB.Reference
- uid: Autodesk.Revit.DB.XYZ
  commentId: T:Autodesk.Revit.DB.XYZ
  isExternal: true
  name: XYZ
  nameWithType: XYZ
  fullName: Autodesk.Revit.DB.XYZ
shouldSkipMarkup: true
