### YamlMime:ManagedReference
items:
- uid: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter
  commentId: T:MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter
  id: DynamicCategorySelectionFilter
  parent: MBF.Revit.Data.SelectionFilters
  children:
  - MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.#ctor(Autodesk.Revit.DB.BuiltInCategory[])
  - MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowElement(Autodesk.Revit.DB.Element)
  - MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowReference(Autodesk.Revit.DB.Reference,Autodesk.Revit.DB.XYZ)
  langs:
  - csharp
  - vb
  name: DynamicCategorySelectionFilter
  nameWithType: DynamicCategorySelectionFilter
  fullName: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter
  type: Class
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/8bd3dcbe83eb4bd0f9f991b91dc095ac3d5ca9f4/SelectionFilters/DynamicCategorySelectionFilter.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.SelectionFilters
  summary: >-
    A dynamic selection filter that allows only elements belonging to specified <xref href="BuiltInCategory" data-throw-if-not-resolved="false"></xref> values.

    Useful for restricting user selection to a specific set of categories.
  example: []
  syntax:
    content: 'public class DynamicCategorySelectionFilter : ISelectionFilter'
    content.vb: Public Class DynamicCategorySelectionFilter Implements ISelectionFilter
  inheritance:
  - System.Object
  implements:
  - Autodesk.Revit.UI.Selection.ISelectionFilter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.#ctor(Autodesk.Revit.DB.BuiltInCategory[])
  commentId: M:MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.#ctor(Autodesk.Revit.DB.BuiltInCategory[])
  id: '#ctor(Autodesk.Revit.DB.BuiltInCategory[])'
  parent: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter
  langs:
  - csharp
  - vb
  name: DynamicCategorySelectionFilter(params BuiltInCategory[])
  nameWithType: DynamicCategorySelectionFilter.DynamicCategorySelectionFilter(params BuiltInCategory[])
  fullName: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.DynamicCategorySelectionFilter(params Autodesk.Revit.DB.BuiltInCategory[])
  type: Constructor
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/8bd3dcbe83eb4bd0f9f991b91dc095ac3d5ca9f4/SelectionFilters/DynamicCategorySelectionFilter.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.SelectionFilters
  summary: >-
    Initializes a new instance of the <xref href="MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter" data-throw-if-not-resolved="false"></xref> class

    with the specified categories that should be allowed during selection.
  example: []
  syntax:
    content: public DynamicCategorySelectionFilter(params BuiltInCategory[] categories)
    parameters:
    - id: categories
      type: Autodesk.Revit.DB.BuiltInCategory[]
      description: An array of <xref href="BuiltInCategory" data-throw-if-not-resolved="false"></xref> values to allow.
    content.vb: Public Sub New(ParamArray categories As BuiltInCategory())
  overload: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.#ctor*
  nameWithType.vb: DynamicCategorySelectionFilter.New(ParamArray BuiltInCategory())
  fullName.vb: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.New(ParamArray Autodesk.Revit.DB.BuiltInCategory())
  name.vb: New(ParamArray BuiltInCategory())
- uid: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowElement(Autodesk.Revit.DB.Element)
  commentId: M:MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowElement(Autodesk.Revit.DB.Element)
  id: AllowElement(Autodesk.Revit.DB.Element)
  parent: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter
  langs:
  - csharp
  - vb
  name: AllowElement(Element)
  nameWithType: DynamicCategorySelectionFilter.AllowElement(Element)
  fullName: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowElement(Autodesk.Revit.DB.Element)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/8bd3dcbe83eb4bd0f9f991b91dc095ac3d5ca9f4/SelectionFilters/DynamicCategorySelectionFilter.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.SelectionFilters
  summary: Determines whether a specific element is allowed for selection.
  example: []
  syntax:
    content: public bool AllowElement(Element element)
    parameters:
    - id: element
      type: Autodesk.Revit.DB.Element
      description: The element being evaluated.
    return:
      type: System.Boolean
      description: <code>true</code> if the element belongs to one of the allowed categories; otherwise, <code>false</code>.
    content.vb: Public Function AllowElement(element As Element) As Boolean
  overload: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowElement*
- uid: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowReference(Autodesk.Revit.DB.Reference,Autodesk.Revit.DB.XYZ)
  commentId: M:MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowReference(Autodesk.Revit.DB.Reference,Autodesk.Revit.DB.XYZ)
  id: AllowReference(Autodesk.Revit.DB.Reference,Autodesk.Revit.DB.XYZ)
  parent: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter
  langs:
  - csharp
  - vb
  name: AllowReference(Reference, XYZ)
  nameWithType: DynamicCategorySelectionFilter.AllowReference(Reference, XYZ)
  fullName: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowReference(Autodesk.Revit.DB.Reference, Autodesk.Revit.DB.XYZ)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Data/blob/8bd3dcbe83eb4bd0f9f991b91dc095ac3d5ca9f4/SelectionFilters/DynamicCategorySelectionFilter.cs
  assemblies:
  - MBF.Revit.Data
  namespace: MBF.Revit.Data.SelectionFilters
  summary: >-
    Determines whether a reference (face, edge, etc.) is allowed for selection.

    This implementation disallows reference-based selection and only allows full element selection.
  example: []
  syntax:
    content: public bool AllowReference(Reference reference, XYZ position)
    parameters:
    - id: reference
      type: Autodesk.Revit.DB.Reference
      description: The reference being evaluated.
    - id: position
      type: Autodesk.Revit.DB.XYZ
      description: The 3D position associated with the reference.
    return:
      type: System.Boolean
      description: Always returns <code>false</code> to disable reference selection.
    content.vb: Public Function AllowReference(reference As Reference, position As XYZ) As Boolean
  overload: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowReference*
references:
- uid: BuiltInCategory
  commentId: T:BuiltInCategory
  isExternal: true
- uid: MBF.Revit.Data.SelectionFilters
  commentId: N:MBF.Revit.Data.SelectionFilters
  isExternal: true
  href: MBF.html
  name: MBF.Revit.Data.SelectionFilters
  nameWithType: MBF.Revit.Data.SelectionFilters
  fullName: MBF.Revit.Data.SelectionFilters
  spec.csharp:
  - uid: MBF
    name: MBF
    isExternal: true
    href: MBF.html
  - name: .
  - uid: MBF.Revit
    name: Revit
    isExternal: true
    href: MBF.Revit.html
  - name: .
  - uid: MBF.Revit.Data
    name: Data
    isExternal: true
    href: MBF.Revit.Data.html
  - name: .
  - uid: MBF.Revit.Data.SelectionFilters
    name: SelectionFilters
    isExternal: true
    href: MBF.Revit.Data.SelectionFilters.html
  spec.vb:
  - uid: MBF
    name: MBF
    isExternal: true
    href: MBF.html
  - name: .
  - uid: MBF.Revit
    name: Revit
    isExternal: true
    href: MBF.Revit.html
  - name: .
  - uid: MBF.Revit.Data
    name: Data
    isExternal: true
    href: MBF.Revit.Data.html
  - name: .
  - uid: MBF.Revit.Data.SelectionFilters
    name: SelectionFilters
    isExternal: true
    href: MBF.Revit.Data.SelectionFilters.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Autodesk.Revit.UI.Selection.ISelectionFilter
  isExternal: true
  name: ISelectionFilter
  nameWithType: ISelectionFilter
  fullName: Autodesk.Revit.UI.Selection.ISelectionFilter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter
  commentId: T:MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter
  isExternal: true
  href: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.html
  name: DynamicCategorySelectionFilter
  nameWithType: DynamicCategorySelectionFilter
  fullName: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter
- uid: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.#ctor*
  commentId: Overload:MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.#ctor
  isExternal: true
  href: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.html#MBF_Revit_Data_SelectionFilters_DynamicCategorySelectionFilter__ctor_Autodesk_Revit_DB_BuiltInCategory___
  name: DynamicCategorySelectionFilter
  nameWithType: DynamicCategorySelectionFilter.DynamicCategorySelectionFilter
  fullName: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.DynamicCategorySelectionFilter
  nameWithType.vb: DynamicCategorySelectionFilter.New
  fullName.vb: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.New
  name.vb: New
- uid: Autodesk.Revit.DB.BuiltInCategory[]
  isExternal: true
  name: BuiltInCategory[]
  nameWithType: BuiltInCategory[]
  fullName: Autodesk.Revit.DB.BuiltInCategory[]
  nameWithType.vb: BuiltInCategory()
  fullName.vb: Autodesk.Revit.DB.BuiltInCategory()
  name.vb: BuiltInCategory()
  spec.csharp:
  - uid: Autodesk.Revit.DB.BuiltInCategory
    name: BuiltInCategory
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Autodesk.Revit.DB.BuiltInCategory
    name: BuiltInCategory
    isExternal: true
  - name: (
  - name: )
- uid: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowElement*
  commentId: Overload:MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowElement
  isExternal: true
  href: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.html#MBF_Revit_Data_SelectionFilters_DynamicCategorySelectionFilter_AllowElement_Autodesk_Revit_DB_Element_
  name: AllowElement
  nameWithType: DynamicCategorySelectionFilter.AllowElement
  fullName: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowElement
- uid: Autodesk.Revit.DB.Element
  isExternal: true
  name: Element
  nameWithType: Element
  fullName: Autodesk.Revit.DB.Element
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowReference*
  commentId: Overload:MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowReference
  isExternal: true
  href: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.html#MBF_Revit_Data_SelectionFilters_DynamicCategorySelectionFilter_AllowReference_Autodesk_Revit_DB_Reference_Autodesk_Revit_DB_XYZ_
  name: AllowReference
  nameWithType: DynamicCategorySelectionFilter.AllowReference
  fullName: MBF.Revit.Data.SelectionFilters.DynamicCategorySelectionFilter.AllowReference
- uid: Autodesk.Revit.DB.Reference
  isExternal: true
  name: Reference
  nameWithType: Reference
  fullName: Autodesk.Revit.DB.Reference
- uid: Autodesk.Revit.DB.XYZ
  commentId: T:Autodesk.Revit.DB.XYZ
  isExternal: true
  name: XYZ
  nameWithType: XYZ
  fullName: Autodesk.Revit.DB.XYZ
shouldSkipMarkup: true
