### YamlMime:ManagedReference
items:
- uid: MB.Common.Jsons.GenericJsonFileService
  commentId: T:MB.Common.Jsons.GenericJsonFileService
  id: GenericJsonFileService
  parent: MB.Common.Jsons
  children:
  - MB.Common.Jsons.GenericJsonFileService.EnsureFileExists(System.String)
  - MB.Common.Jsons.GenericJsonFileService.Load``1(System.String)
  - MB.Common.Jsons.GenericJsonFileService.Save``1(``0,System.String)
  langs:
  - csharp
  - vb
  name: GenericJsonFileService
  nameWithType: GenericJsonFileService
  fullName: MB.Common.Jsons.GenericJsonFileService
  type: Class
  source:
    href: https://github.com/MicroBIM-DevTeam/MB.Common/blob/e96416988c50e96546e863e028aa754ec5e183ac/Jsons/GenericJsonFileService.cs
  assemblies:
  - MB.Common
  namespace: MB.Common.Jsons
  summary: Provides generic methods for saving and loading JSON files from disk.
  example: []
  syntax:
    content: public static class GenericJsonFileService
    content.vb: Public Module GenericJsonFileService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MB.Common.Jsons.GenericJsonFileService.EnsureFileExists(System.String)
  commentId: M:MB.Common.Jsons.GenericJsonFileService.EnsureFileExists(System.String)
  id: EnsureFileExists(System.String)
  parent: MB.Common.Jsons.GenericJsonFileService
  langs:
  - csharp
  - vb
  name: EnsureFileExists(string)
  nameWithType: GenericJsonFileService.EnsureFileExists(string)
  fullName: MB.Common.Jsons.GenericJsonFileService.EnsureFileExists(string)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MB.Common/blob/e96416988c50e96546e863e028aa754ec5e183ac/Jsons/GenericJsonFileService.cs
  assemblies:
  - MB.Common
  namespace: MB.Common.Jsons
  summary: Ensures that a file exists at the specified path, creating it if necessary.
  remarks: >-
    If the specified file does not exist, this method creates it along with any necessary

    directories.  The created file will be initialized with an empty JSON array.
  example: []
  syntax:
    content: public static MbResult<bool> EnsureFileExists(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: The full path of the file to check or create. Must not be null, empty, or whitespace.
    return:
      type: MB.Common.Utils.Result.MbResult{System.Boolean}
      description: >-
        An <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing a boolean value indicating success or failure.  Returns

        <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>

        if the file exists or was successfully created; otherwise, returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>

        with an error message.
    content.vb: Public Shared Function EnsureFileExists(filePath As String) As MbResult(Of Boolean)
  overload: MB.Common.Jsons.GenericJsonFileService.EnsureFileExists*
  nameWithType.vb: GenericJsonFileService.EnsureFileExists(String)
  fullName.vb: MB.Common.Jsons.GenericJsonFileService.EnsureFileExists(String)
  name.vb: EnsureFileExists(String)
- uid: MB.Common.Jsons.GenericJsonFileService.Save``1(``0,System.String)
  commentId: M:MB.Common.Jsons.GenericJsonFileService.Save``1(``0,System.String)
  id: Save``1(``0,System.String)
  parent: MB.Common.Jsons.GenericJsonFileService
  langs:
  - csharp
  - vb
  name: Save<T>(T, string)
  nameWithType: GenericJsonFileService.Save<T>(T, string)
  fullName: MB.Common.Jsons.GenericJsonFileService.Save<T>(T, string)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MB.Common/blob/e96416988c50e96546e863e028aa754ec5e183ac/Jsons/GenericJsonFileService.cs
  assemblies:
  - MB.Common
  namespace: MB.Common.Jsons
  summary: Saves the given data as JSON to the specified file path.
  remarks: Will automatically create the target directory if it doesn't exist.
  example: []
  syntax:
    content: public static MbResult<bool> Save<T>(T data, string filePath)
    parameters:
    - id: data
      type: '{T}'
      description: The data object to serialize and save.
    - id: filePath
      type: System.String
      description: The full path where the file will be saved.
    typeParameters:
    - id: T
      description: The type of the data to serialize.
    return:
      type: MB.Common.Utils.Result.MbResult{System.Boolean}
      description: An <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> indicating success or failure.
    content.vb: Public Shared Function Save(Of T)(data As T, filePath As String) As MbResult(Of Boolean)
  overload: MB.Common.Jsons.GenericJsonFileService.Save*
  nameWithType.vb: GenericJsonFileService.Save(Of T)(T, String)
  fullName.vb: MB.Common.Jsons.GenericJsonFileService.Save(Of T)(T, String)
  name.vb: Save(Of T)(T, String)
- uid: MB.Common.Jsons.GenericJsonFileService.Load``1(System.String)
  commentId: M:MB.Common.Jsons.GenericJsonFileService.Load``1(System.String)
  id: Load``1(System.String)
  parent: MB.Common.Jsons.GenericJsonFileService
  langs:
  - csharp
  - vb
  name: Load<T>(string)
  nameWithType: GenericJsonFileService.Load<T>(string)
  fullName: MB.Common.Jsons.GenericJsonFileService.Load<T>(string)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MB.Common/blob/e96416988c50e96546e863e028aa754ec5e183ac/Jsons/GenericJsonFileService.cs
  assemblies:
  - MB.Common
  namespace: MB.Common.Jsons
  summary: Loads JSON data from a file and deserializes it into an object of type <code class="typeparamref">T</code>.
  example: []
  syntax:
    content: 'public static MbResult<T> Load<T>(string filePath) where T : new()'
    parameters:
    - id: filePath
      type: System.String
      description: The full path to the JSON file.
    typeParameters:
    - id: T
      description: The type to deserialize the JSON content into. Must have a parameterless constructor.
    return:
      type: MB.Common.Utils.Result.MbResult{{T}}
      description: An <xref href="MB.Common.Utils.Result.MbResult%601" data-throw-if-not-resolved="false"></xref> containing the deserialized object, or an empty instance on failure.
    content.vb: Public Shared Function Load(Of T As New)(filePath As String) As MbResult(Of T)
  overload: MB.Common.Jsons.GenericJsonFileService.Load*
  nameWithType.vb: GenericJsonFileService.Load(Of T)(String)
  fullName.vb: MB.Common.Jsons.GenericJsonFileService.Load(Of T)(String)
  name.vb: Load(Of T)(String)
references:
- uid: MB.Common.Jsons
  commentId: N:MB.Common.Jsons
  isExternal: true
  href: MB.html
  name: MB.Common.Jsons
  nameWithType: MB.Common.Jsons
  fullName: MB.Common.Jsons
  spec.csharp:
  - uid: MB
    name: MB
    isExternal: true
    href: MB.html
  - name: .
  - uid: MB.Common
    name: Common
    isExternal: true
    href: MB.Common.html
  - name: .
  - uid: MB.Common.Jsons
    name: Jsons
    isExternal: true
    href: MB.Common.Jsons.html
  spec.vb:
  - uid: MB
    name: MB
    isExternal: true
    href: MB.html
  - name: .
  - uid: MB.Common
    name: Common
    isExternal: true
    href: MB.Common.html
  - name: .
  - uid: MB.Common.Jsons
    name: Jsons
    isExternal: true
    href: MB.Common.Jsons.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MB.Common.Utils.Result.MbResult`1
  commentId: T:MB.Common.Utils.Result.MbResult`1
  parent: MB.Common.Utils.Result
  isExternal: true
  href: MB.Common.Utils.Result.MbResult-1.html
  name: MbResult<T>
  nameWithType: MbResult<T>
  fullName: MB.Common.Utils.Result.MbResult<T>
  nameWithType.vb: MbResult(Of T)
  fullName.vb: MB.Common.Utils.Result.MbResult(Of T)
  name.vb: MbResult(Of T)
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
    href: MB.Common.Utils.Result.MbResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
    href: MB.Common.Utils.Result.MbResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MB.Common.Jsons.GenericJsonFileService.EnsureFileExists*
  commentId: Overload:MB.Common.Jsons.GenericJsonFileService.EnsureFileExists
  isExternal: true
  href: MB.Common.Jsons.GenericJsonFileService.html#MB_Common_Jsons_GenericJsonFileService_EnsureFileExists_System_String_
  name: EnsureFileExists
  nameWithType: GenericJsonFileService.EnsureFileExists
  fullName: MB.Common.Jsons.GenericJsonFileService.EnsureFileExists
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MB.Common.Utils.Result.MbResult{System.Boolean}
  commentId: T:MB.Common.Utils.Result.MbResult{System.Boolean}
  parent: MB.Common.Utils.Result
  definition: MB.Common.Utils.Result.MbResult`1
  href: MB.Common.Utils.Result.MbResult-1.html
  name: MbResult<bool>
  nameWithType: MbResult<bool>
  fullName: MB.Common.Utils.Result.MbResult<bool>
  nameWithType.vb: MbResult(Of Boolean)
  fullName.vb: MB.Common.Utils.Result.MbResult(Of Boolean)
  name.vb: MbResult(Of Boolean)
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
    href: MB.Common.Utils.Result.MbResult-1.html
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
    href: MB.Common.Utils.Result.MbResult-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MB.Common.Utils.Result
  commentId: N:MB.Common.Utils.Result
  isExternal: true
  href: MB.html
  name: MB.Common.Utils.Result
  nameWithType: MB.Common.Utils.Result
  fullName: MB.Common.Utils.Result
  spec.csharp:
  - uid: MB
    name: MB
    isExternal: true
    href: MB.html
  - name: .
  - uid: MB.Common
    name: Common
    isExternal: true
    href: MB.Common.html
  - name: .
  - uid: MB.Common.Utils
    name: Utils
    isExternal: true
    href: MB.Common.Utils.html
  - name: .
  - uid: MB.Common.Utils.Result
    name: Result
    isExternal: true
    href: MB.Common.Utils.Result.html
  spec.vb:
  - uid: MB
    name: MB
    isExternal: true
    href: MB.html
  - name: .
  - uid: MB.Common
    name: Common
    isExternal: true
    href: MB.Common.html
  - name: .
  - uid: MB.Common.Utils
    name: Utils
    isExternal: true
    href: MB.Common.Utils.html
  - name: .
  - uid: MB.Common.Utils.Result
    name: Result
    isExternal: true
    href: MB.Common.Utils.Result.html
- uid: MB.Common.Jsons.GenericJsonFileService.Save*
  commentId: Overload:MB.Common.Jsons.GenericJsonFileService.Save
  isExternal: true
  href: MB.Common.Jsons.GenericJsonFileService.html#MB_Common_Jsons_GenericJsonFileService_Save__1___0_System_String_
  name: Save
  nameWithType: GenericJsonFileService.Save
  fullName: MB.Common.Jsons.GenericJsonFileService.Save
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: MB.Common.Jsons.GenericJsonFileService.Load*
  commentId: Overload:MB.Common.Jsons.GenericJsonFileService.Load
  isExternal: true
  href: MB.Common.Jsons.GenericJsonFileService.html#MB_Common_Jsons_GenericJsonFileService_Load__1_System_String_
  name: Load
  nameWithType: GenericJsonFileService.Load
  fullName: MB.Common.Jsons.GenericJsonFileService.Load
- uid: MB.Common.Utils.Result.MbResult{{T}}
  commentId: T:MB.Common.Utils.Result.MbResult{``0}
  parent: MB.Common.Utils.Result
  definition: MB.Common.Utils.Result.MbResult`1
  href: MB.Common.Utils.Result.MbResult-1.html
  name: MbResult<T>
  nameWithType: MbResult<T>
  fullName: MB.Common.Utils.Result.MbResult<T>
  nameWithType.vb: MbResult(Of T)
  fullName.vb: MB.Common.Utils.Result.MbResult(Of T)
  name.vb: MbResult(Of T)
  spec.csharp:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
    href: MB.Common.Utils.Result.MbResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: MB.Common.Utils.Result.MbResult`1
    name: MbResult
    isExternal: true
    href: MB.Common.Utils.Result.MbResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
shouldSkipMarkup: true
