### YamlMime:ManagedReference
items:
- uid: MBF.Revit.Geometry.Utils.MbXyzUtils
  commentId: T:MBF.Revit.Geometry.Utils.MbXyzUtils
  id: MbXyzUtils
  parent: MBF.Revit.Geometry.Utils
  children:
  - MBF.Revit.Geometry.Utils.MbXyzUtils.DoLinesIntersect2D(Autodesk.Revit.DB.Line,Autodesk.Revit.DB.Line)
  - MBF.Revit.Geometry.Utils.MbXyzUtils.DoLinesIntersect2D(Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ)
  - MBF.Revit.Geometry.Utils.MbXyzUtils.HasSelfIntersections(System.Collections.Generic.List{Autodesk.Revit.DB.XYZ})
  - MBF.Revit.Geometry.Utils.MbXyzUtils.SortPointsClockwise(System.Collections.Generic.List{Autodesk.Revit.DB.XYZ})
  langs:
  - csharp
  - vb
  name: MbXyzUtils
  nameWithType: MbXyzUtils
  fullName: MBF.Revit.Geometry.Utils.MbXyzUtils
  type: Class
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Geometry/blob/d84ac7f6567e9f2003616229b2569f565050e4de/Utils/MbXyzUtils.cs
  assemblies:
  - MBF.Revit.Geometry
  namespace: MBF.Revit.Geometry.Utils
  summary: Provides utility methods for working with 2D geometry, including operations on polygons and line segments.
  remarks: >-
    This class includes methods for detecting self-intersections in polygons, determining line segment

    intersections, and sorting points in a clockwise order. It is designed to work with 2D geometry represented by

    <xref href="Autodesk.Revit.DB.XYZ" data-throw-if-not-resolved="false"></xref>

    points, where the Z-coordinate is ignored in calculations.
  example: []
  syntax:
    content: >-
      [LogAspect]

      public static class MbXyzUtils
    content.vb: >-
      <LogAspect>

      Public Module MbXyzUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: MB.Common.Aspects.LogAspect
    ctor: MB.Common.Aspects.LogAspect.#ctor
    arguments: []
- uid: MBF.Revit.Geometry.Utils.MbXyzUtils.HasSelfIntersections(System.Collections.Generic.List{Autodesk.Revit.DB.XYZ})
  commentId: M:MBF.Revit.Geometry.Utils.MbXyzUtils.HasSelfIntersections(System.Collections.Generic.List{Autodesk.Revit.DB.XYZ})
  id: HasSelfIntersections(System.Collections.Generic.List{Autodesk.Revit.DB.XYZ})
  parent: MBF.Revit.Geometry.Utils.MbXyzUtils
  langs:
  - csharp
  - vb
  name: HasSelfIntersections(List<XYZ>)
  nameWithType: MbXyzUtils.HasSelfIntersections(List<XYZ>)
  fullName: MBF.Revit.Geometry.Utils.MbXyzUtils.HasSelfIntersections(System.Collections.Generic.List<Autodesk.Revit.DB.XYZ>)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Geometry/blob/d84ac7f6567e9f2003616229b2569f565050e4de/Utils/MbXyzUtils.cs
  assemblies:
  - MBF.Revit.Geometry
  namespace: MBF.Revit.Geometry.Utils
  summary: Determines whether a list of <xref href="Autodesk.Revit.DB.XYZ" data-throw-if-not-resolved="false"></xref> points forming a polygon has any self-intersections.
  remarks: >-
    The method performs three checks:

    <ol><li>Checks all non-adjacent segment pairs within the polygon to detect internal intersections.</li><li>Checks if the most recently added segment intersects any existing (non-adjacent) segment.</li><li>
                Checks if the closing segment (from the last point to the first) intersects any interior
                segment (excluding adjacent ones).
            </li></ol>
  example: []
  syntax:
    content: public static bool HasSelfIntersections(List<XYZ> points)
    parameters:
    - id: points
      type: System.Collections.Generic.List{Autodesk.Revit.DB.XYZ}
      description: A list of points representing the polygon vertices in order.
    return:
      type: System.Boolean
      description: <code>true</code> if any two non-adjacent edges of the polygon intersect; otherwise, <code>false</code>.
    content.vb: Public Shared Function HasSelfIntersections(points As List(Of XYZ)) As Boolean
  overload: MBF.Revit.Geometry.Utils.MbXyzUtils.HasSelfIntersections*
  nameWithType.vb: MbXyzUtils.HasSelfIntersections(List(Of XYZ))
  fullName.vb: MBF.Revit.Geometry.Utils.MbXyzUtils.HasSelfIntersections(System.Collections.Generic.List(Of Autodesk.Revit.DB.XYZ))
  name.vb: HasSelfIntersections(List(Of XYZ))
- uid: MBF.Revit.Geometry.Utils.MbXyzUtils.DoLinesIntersect2D(Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ)
  commentId: M:MBF.Revit.Geometry.Utils.MbXyzUtils.DoLinesIntersect2D(Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ)
  id: DoLinesIntersect2D(Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ,Autodesk.Revit.DB.XYZ)
  parent: MBF.Revit.Geometry.Utils.MbXyzUtils
  langs:
  - csharp
  - vb
  name: DoLinesIntersect2D(XYZ, XYZ, XYZ, XYZ)
  nameWithType: MbXyzUtils.DoLinesIntersect2D(XYZ, XYZ, XYZ, XYZ)
  fullName: MBF.Revit.Geometry.Utils.MbXyzUtils.DoLinesIntersect2D(Autodesk.Revit.DB.XYZ, Autodesk.Revit.DB.XYZ, Autodesk.Revit.DB.XYZ, Autodesk.Revit.DB.XYZ)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Geometry/blob/d84ac7f6567e9f2003616229b2569f565050e4de/Utils/MbXyzUtils.cs
  assemblies:
  - MBF.Revit.Geometry
  namespace: MBF.Revit.Geometry.Utils
  summary: Determines whether two line segments in 2D space intersect.
  remarks: >-
    This method uses a counter-clockwise orientation test to determine if the line segments intersect.

    The segments are considered to intersect if they share any point in common, including endpoints.
  example: []
  syntax:
    content: public static bool DoLinesIntersect2D(XYZ segment1Start, XYZ segment1End, XYZ segment2Start, XYZ segment2End)
    parameters:
    - id: segment1Start
      type: Autodesk.Revit.DB.XYZ
      description: The starting point of the first line segment.
    - id: segment1End
      type: Autodesk.Revit.DB.XYZ
      description: The ending point of the first line segment.
    - id: segment2Start
      type: Autodesk.Revit.DB.XYZ
      description: The starting point of the second line segment.
    - id: segment2End
      type: Autodesk.Revit.DB.XYZ
      description: The ending point of the second line segment.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the two line segments intersect; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Function DoLinesIntersect2D(segment1Start As XYZ, segment1End As XYZ, segment2Start As XYZ, segment2End As XYZ) As Boolean
  overload: MBF.Revit.Geometry.Utils.MbXyzUtils.DoLinesIntersect2D*
- uid: MBF.Revit.Geometry.Utils.MbXyzUtils.DoLinesIntersect2D(Autodesk.Revit.DB.Line,Autodesk.Revit.DB.Line)
  commentId: M:MBF.Revit.Geometry.Utils.MbXyzUtils.DoLinesIntersect2D(Autodesk.Revit.DB.Line,Autodesk.Revit.DB.Line)
  id: DoLinesIntersect2D(Autodesk.Revit.DB.Line,Autodesk.Revit.DB.Line)
  parent: MBF.Revit.Geometry.Utils.MbXyzUtils
  langs:
  - csharp
  - vb
  name: DoLinesIntersect2D(Line, Line)
  nameWithType: MbXyzUtils.DoLinesIntersect2D(Line, Line)
  fullName: MBF.Revit.Geometry.Utils.MbXyzUtils.DoLinesIntersect2D(Autodesk.Revit.DB.Line, Autodesk.Revit.DB.Line)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Geometry/blob/d84ac7f6567e9f2003616229b2569f565050e4de/Utils/MbXyzUtils.cs
  assemblies:
  - MBF.Revit.Geometry
  namespace: MBF.Revit.Geometry.Utils
  summary: Determines whether two Revit <xref href="Autodesk.Revit.DB.Line" data-throw-if-not-resolved="false"></xref> objects intersect in 2D (ignoring Z).
  example: []
  syntax:
    content: public static bool DoLinesIntersect2D(Line line1, Line line2)
    parameters:
    - id: line1
      type: Autodesk.Revit.DB.Line
      description: First line.
    - id: line2
      type: Autodesk.Revit.DB.Line
      description: Second line.
    return:
      type: System.Boolean
      description: <code>true</code> if the lines intersect in 2D; otherwise, <code>false</code>.
    content.vb: Public Shared Function DoLinesIntersect2D(line1 As Line, line2 As Line) As Boolean
  overload: MBF.Revit.Geometry.Utils.MbXyzUtils.DoLinesIntersect2D*
- uid: MBF.Revit.Geometry.Utils.MbXyzUtils.SortPointsClockwise(System.Collections.Generic.List{Autodesk.Revit.DB.XYZ})
  commentId: M:MBF.Revit.Geometry.Utils.MbXyzUtils.SortPointsClockwise(System.Collections.Generic.List{Autodesk.Revit.DB.XYZ})
  id: SortPointsClockwise(System.Collections.Generic.List{Autodesk.Revit.DB.XYZ})
  parent: MBF.Revit.Geometry.Utils.MbXyzUtils
  langs:
  - csharp
  - vb
  name: SortPointsClockwise(List<XYZ>)
  nameWithType: MbXyzUtils.SortPointsClockwise(List<XYZ>)
  fullName: MBF.Revit.Geometry.Utils.MbXyzUtils.SortPointsClockwise(System.Collections.Generic.List<Autodesk.Revit.DB.XYZ>)
  type: Method
  source:
    href: https://github.com/MicroBIM-DevTeam/MBF.Revit.Geometry/blob/d84ac7f6567e9f2003616229b2569f565050e4de/Utils/MbXyzUtils.cs
  assemblies:
  - MBF.Revit.Geometry
  namespace: MBF.Revit.Geometry.Utils
  summary: Sorts a list of <xref href="Autodesk.Revit.DB.XYZ" data-throw-if-not-resolved="false"></xref> points in clockwise order around their centroid (in 2D plane).
  example: []
  syntax:
    content: public static List<XYZ> SortPointsClockwise(List<XYZ> points)
    parameters:
    - id: points
      type: System.Collections.Generic.List{Autodesk.Revit.DB.XYZ}
      description: The list of points to sort.
    return:
      type: System.Collections.Generic.List{Autodesk.Revit.DB.XYZ}
      description: A new list of points sorted clockwise.
    content.vb: Public Shared Function SortPointsClockwise(points As List(Of XYZ)) As List(Of XYZ)
  overload: MBF.Revit.Geometry.Utils.MbXyzUtils.SortPointsClockwise*
  nameWithType.vb: MbXyzUtils.SortPointsClockwise(List(Of XYZ))
  fullName.vb: MBF.Revit.Geometry.Utils.MbXyzUtils.SortPointsClockwise(System.Collections.Generic.List(Of Autodesk.Revit.DB.XYZ))
  name.vb: SortPointsClockwise(List(Of XYZ))
references:
- uid: Autodesk.Revit.DB.XYZ
  isExternal: true
  name: XYZ
  nameWithType: XYZ
  fullName: Autodesk.Revit.DB.XYZ
- uid: MBF.Revit.Geometry.Utils
  commentId: N:MBF.Revit.Geometry.Utils
  isExternal: true
  href: MBF.html
  name: MBF.Revit.Geometry.Utils
  nameWithType: MBF.Revit.Geometry.Utils
  fullName: MBF.Revit.Geometry.Utils
  spec.csharp:
  - uid: MBF
    name: MBF
    isExternal: true
    href: MBF.html
  - name: .
  - uid: MBF.Revit
    name: Revit
    isExternal: true
    href: MBF.Revit.html
  - name: .
  - uid: MBF.Revit.Geometry
    name: Geometry
    isExternal: true
    href: MBF.Revit.Geometry.html
  - name: .
  - uid: MBF.Revit.Geometry.Utils
    name: Utils
    isExternal: true
    href: MBF.Revit.Geometry.Utils.html
  spec.vb:
  - uid: MBF
    name: MBF
    isExternal: true
    href: MBF.html
  - name: .
  - uid: MBF.Revit
    name: Revit
    isExternal: true
    href: MBF.Revit.html
  - name: .
  - uid: MBF.Revit.Geometry
    name: Geometry
    isExternal: true
    href: MBF.Revit.Geometry.html
  - name: .
  - uid: MBF.Revit.Geometry.Utils
    name: Utils
    isExternal: true
    href: MBF.Revit.Geometry.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MBF.Revit.Geometry.Utils.MbXyzUtils.HasSelfIntersections*
  commentId: Overload:MBF.Revit.Geometry.Utils.MbXyzUtils.HasSelfIntersections
  isExternal: true
  href: MBF.Revit.Geometry.Utils.MbXyzUtils.html#MBF_Revit_Geometry_Utils_MbXyzUtils_HasSelfIntersections_System_Collections_Generic_List_Autodesk_Revit_DB_XYZ__
  name: HasSelfIntersections
  nameWithType: MbXyzUtils.HasSelfIntersections
  fullName: MBF.Revit.Geometry.Utils.MbXyzUtils.HasSelfIntersections
- uid: System.Collections.Generic.List{Autodesk.Revit.DB.XYZ}
  commentId: T:System.Collections.Generic.List{Autodesk.Revit.DB.XYZ}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<XYZ>
  nameWithType: List<XYZ>
  fullName: System.Collections.Generic.List<Autodesk.Revit.DB.XYZ>
  nameWithType.vb: List(Of XYZ)
  fullName.vb: System.Collections.Generic.List(Of Autodesk.Revit.DB.XYZ)
  name.vb: List(Of XYZ)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Autodesk.Revit.DB.XYZ
    name: XYZ
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Autodesk.Revit.DB.XYZ
    name: XYZ
    isExternal: true
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MBF.Revit.Geometry.Utils.MbXyzUtils.DoLinesIntersect2D*
  commentId: Overload:MBF.Revit.Geometry.Utils.MbXyzUtils.DoLinesIntersect2D
  isExternal: true
  href: MBF.Revit.Geometry.Utils.MbXyzUtils.html#MBF_Revit_Geometry_Utils_MbXyzUtils_DoLinesIntersect2D_Autodesk_Revit_DB_XYZ_Autodesk_Revit_DB_XYZ_Autodesk_Revit_DB_XYZ_Autodesk_Revit_DB_XYZ_
  name: DoLinesIntersect2D
  nameWithType: MbXyzUtils.DoLinesIntersect2D
  fullName: MBF.Revit.Geometry.Utils.MbXyzUtils.DoLinesIntersect2D
- uid: Autodesk.Revit.DB.Line
  commentId: T:Autodesk.Revit.DB.Line
  isExternal: true
  name: Line
  nameWithType: Line
  fullName: Autodesk.Revit.DB.Line
- uid: MBF.Revit.Geometry.Utils.MbXyzUtils.SortPointsClockwise*
  commentId: Overload:MBF.Revit.Geometry.Utils.MbXyzUtils.SortPointsClockwise
  isExternal: true
  href: MBF.Revit.Geometry.Utils.MbXyzUtils.html#MBF_Revit_Geometry_Utils_MbXyzUtils_SortPointsClockwise_System_Collections_Generic_List_Autodesk_Revit_DB_XYZ__
  name: SortPointsClockwise
  nameWithType: MbXyzUtils.SortPointsClockwise
  fullName: MBF.Revit.Geometry.Utils.MbXyzUtils.SortPointsClockwise
shouldSkipMarkup: true
